(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    658546,      13183]
NotebookOptionsPosition[    648498,      13003]
NotebookOutlinePosition[    648949,      13021]
CellTagsIndexPosition[    648906,      13018]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["1. Integer", "Section",
 CellChangeTimes->{{3.869032385850334*^9, 
  3.8690323969090385`*^9}},ExpressionUUID->"4f8de96f-2eb1-4990-aeec-\
e24e644f6f79"],

Cell[CellGroupData[{

Cell["External Language Cell", "Subsection",
 CellChangeTimes->{{3.869062968864035*^9, 
  3.869062980410074*^9}},ExpressionUUID->"d8ed2252-8368-4feb-bacb-\
38b19dac6056"],

Cell[CellGroupData[{

Cell["\<\
EXTERN_C DLLEXPORT mint test_fc(mint in1, mint in2)
{
\treturn in1 + in2;
}
<||>
Integer test_llu(Integer in1; Integer in2)
{
\tReturn in1 + in2;
}\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"LLU",
 CellChangeTimes->{{3.8690323982696905`*^9, 3.8690326134747715`*^9}, {
  3.8690327997127314`*^9, 3.869032802114363*^9}, {3.8690330655378513`*^9, 
  3.86903306799343*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0fa9901b-9a15-4e3b-baed-6dac49848d87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Source File:\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810035130.cpp\"\>"}]\
], "Echo",
 CellChangeTimes->{
  3.869063492440812*^9},ExpressionUUID->"3af89828-5d2e-4b86-93a4-\
9b026f74cf7d"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Compiling\"\>",
   "EchoLabel"], "  ", "\<\"20220810035130\"\>"}]], "Echo",
 CellChangeTimes->{
  3.8690634930814266`*^9},ExpressionUUID->"f53220a0-f8cc-4ad6-bc02-\
5cd6a3aa808f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Done\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\"\>"}\
]], "Echo",
 CellChangeTimes->{
  3.869063506775426*^9},ExpressionUUID->"53136ef5-29ad-4721-a5bc-\
defb23409a4d"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{ExternalEvaluateLLU`Private`stream$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810035130.cpp", 
  ExternalEvaluateLLU`Private`src0$$ = "", 
  ExternalEvaluateLLU`Private`input$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT mint test_fc(mint in1, mint in2)\n{\
\n\treturn in1 + in2;\n}\n<||>\nInteger test_llu(Integer in1; Integer in2)\n{\
\n\tReturn in1 + in2;\n}\n<||>\nBoolean __test__(Integer a)\n{\n\tReturn \
!LLU::LibraryData::uncheckedAPI();\n}", 
  ExternalEvaluateLLU`Private`libName$$ = "20220810035130", 
  ExternalEvaluateLLU`Private`src$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT mint test_fc(mint in1, mint in2)\n{\
\n\treturn in1 + in2;\n}\n\nEXTERN_C DLLEXPORT int \
test_llu(WolframLibraryData libData, mint Argc, \nMArgument *Args, MArgument \
Res){\n\tauto err = LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr \
{libData, Argc, Args, Res};\n\tauto in1 = mngr.getInteger(0);\n\tauto in2 = \
mngr.getInteger(1);\n\tmngr.set(in1 + in2);\n\treturn err;\n}\nEXTERN_C \
DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, \nMArgument \
*Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto a = \
mngr.getInteger(0);\n\tmngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn \
err;\n}", ExternalEvaluateLLU`Private`head$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT mint test_fc(mint in1, mint in2)\n{\
\n\treturn in1 + in2;\n}\n", 
  ExternalEvaluateLLU`Private`functions$$ = {<|
   "Name" -> "\"test_llu\"", "Load" -> 
    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]", "Code" -> 
    "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto in1 = \
mngr.getInteger(0);\n\tauto in2 = mngr.getInteger(1);\n\tmngr.set(in1 + in2);\
\n\treturn err;\n}", "inType" -> {"Integer", "Integer"}, "outType" -> 
    "Integer", "inName" -> {"in1", "in2"}, "outName" -> "in1 + in2", 
    "inMember" -> {"integer", "integer"}, "outMember" -> "integer", 
    "inCoercion" -> {"(Integer)", "(Integer)"}, "outCoercion" -> "(mint)"|>, <|
   "Name" -> "\"__test__\"", "Load" -> 
    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
    "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto a = \
mngr.getInteger(0);\n\tmngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn \
err;\n}", "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
    "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
    "inMember" -> {"integer"}, "outMember" -> "integer", 
    "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
  ExternalEvaluateLLU`Private`filename$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810035130.cpp", 
  ExternalEvaluateLLU`Private`lib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\20220810035130.dll", 
  ExternalEvaluateLLU`Private`path$$, ExternalEvaluateLLU`Private`a$$, 
  ExternalEvaluateLLU`Private`debuglib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035130.dll"}, 
  PanelBox[
   InterpretationBox[GridBox[{
      {
       StyleBox["\<\"Open source file\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810035130.\
cpp\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>If[
          FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
          ExternalEvaluate["Shell", 
           StringTemplate["code `1`"][
           ExternalEvaluateLLU`Private`filename$$]]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Build\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"20220810035130\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>ExternalEvaluateLLU`Private`build[
          Dynamic[ExternalEvaluateLLU`Private`filename$$], 
          Dynamic[ExternalEvaluateLLU`Private`libName$$]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Load/Unload\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       PanelBox[
        TagBox[GridBox[{
           {
            ButtonBox[
             StyleBox["\<\"Load Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Load Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Unload Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Unload Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
               "Unloaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   Slot["Load"]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"], 
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    Slot["Load"]]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[2.0999999999999996`]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Function[BoxForm`e$, 
          TableForm[BoxForm`e$]]]]},
      {
       StyleBox["\<\"Load Function(Release/Debug)\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       DynamicModuleBox[{ExternalEvaluateLLU`Private`debuglib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035130.dll", 
        ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\20220810035130.dll", 
        ExternalEvaluateLLU`Private`src$$ = 
        "D:\\ExternalEvaluate_LLU\\Source\\20220810035130.cpp", 
        ExternalEvaluateLLU`Private`functions$$ = {<|
         "Name" -> "\"test_llu\"", "Load" -> 
          "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]", "Code" -> 
          "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in1 = mngr.getInteger(0);\n\tauto in2 = mngr.getInteger(1);\n\t\
mngr.set(in1 + in2);\n\treturn err;\n}", "inType" -> {"Integer", "Integer"}, 
          "outType" -> "Integer", "inName" -> {"in1", "in2"}, "outName" -> 
          "in1 + in2", "inMember" -> {"integer", "integer"}, "outMember" -> 
          "integer", "inCoercion" -> {"(Integer)", "(Integer)"}, 
          "outCoercion" -> "(mint)"|>, <|
         "Name" -> "\"__test__\"", "Load" -> 
          
          "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
          "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
          "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
          "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
          "inMember" -> {"integer"}, "outMember" -> "integer", 
          "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
        ExternalEvaluateLLU`Private`libName$$ = "20220810035130", 
        ExternalEvaluateLLU`Private`load$$}, 
        PanelBox[
         TagBox[GridBox[{
            {
             StyleBox["\<\"Export Function\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             TagBox[GridBox[{
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["test_llu", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"], Appearance -> 
                    Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]},
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["__test__", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"]},
            {
             StyleBox["\<\"Copy LibraryFunctionDeclaration\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             PanelBox[
              TagBox[
               TagBox[GridBox[{
                  {
                   ButtonBox[
                    StyleBox["\<\"Release\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                    ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810035130.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\20220810035130.dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]},
                  {
                   ButtonBox[
                    StyleBox["\<\"Debug\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                    ToExpression[
                    "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"],
                     "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810035130.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035130.\
dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]}
                 },
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                Column],
               Function[BoxForm`e$, 
                TableForm[BoxForm`e$]]]]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[2.0999999999999996`]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$]]]],
        DynamicModuleValues:>{}]},
      {
       StyleBox["\<\"File Operations\"\>",
        StripOnInput->False,
        FontWeight->Bold], GridBox[{
         {
          ButtonBox[
           StyleBox["\<\"Append to Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           ButtonFunction:>CellPrint[
             Cell[
             "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
              "ExternalLanguage", CellEvaluationLanguage -> "LLU"]],
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rewrite Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
              Cell[
              "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
               "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]),
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rollback Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
            WriteString[
             ExternalEvaluateLLU`Private`filename$$, 
              ExternalEvaluateLLU`Private`src0$$]; 
            Close[ExternalEvaluateLLU`Private`filename$$]),
           Evaluator->Automatic,
           Method->"Preemptive"]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.1]}, 
            Offset[0.2]}}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    TableForm[{{
       Style["Open source file", Bold], 
       Button[
        Style["D:\\ExternalEvaluate_LLU\\Source\\20220810035130.cpp", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        If[
         FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
         ExternalEvaluate["Shell", 
          StringTemplate["code `1`"][
          ExternalEvaluateLLU`Private`filename$$]]], Appearance -> Frameless, 
        Method -> "Queued"]}, {
       Style["Build", Bold], 
       Button[
        Style["20220810035130", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        ExternalEvaluateLLU`Private`build[
         Dynamic[ExternalEvaluateLLU`Private`filename$$], 
         Dynamic[ExternalEvaluateLLU`Private`libName$$]], Appearance -> 
        Frameless, Method -> "Queued"]}, {
       Style["Load/Unload", Bold], 
       Panel[
        TableForm[{{
           Button[
            Style["Load Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"], Method -> 
            "Queued"], 
           Button[
            Style["Load Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"], 
            Method -> "Queued"]}, {
           Button[
            Style["Unload Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"], 
            Method -> "Queued"], 
           Button[
            Style["Unload Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
             "Unloaded"], Method -> "Queued"]}, {
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 Slot["Load"]]}& ][ExternalEvaluateLLU`Private`functions$$]], 
             "LoadResult"]], 
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                  Slot["Load"]]]}& ][
              ExternalEvaluateLLU`Private`functions$$]], "LoadResult"]]}}]]}, {
       Style["Load Function(Release/Debug)", Bold], 
       DynamicModule[{
        ExternalEvaluateLLU`Private`debuglib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035130.dll", 
         ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\20220810035130.dll", 
         ExternalEvaluateLLU`Private`src$$ = 
         "D:\\ExternalEvaluate_LLU\\Source\\20220810035130.cpp", 
         ExternalEvaluateLLU`Private`functions$$ = {<|
           "Name" -> "\"test_llu\"", "Load" -> 
            "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]", "Code" -> 
            "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in1 = mngr.getInteger(0);\n\tauto in2 = mngr.getInteger(1);\n\t\
mngr.set(in1 + in2);\n\treturn err;\n}", "inType" -> {"Integer", "Integer"}, 
            "outType" -> "Integer", "inName" -> {"in1", "in2"}, "outName" -> 
            "in1 + in2", "inMember" -> {"integer", "integer"}, "outMember" -> 
            "integer", "inCoercion" -> {"(Integer)", "(Integer)"}, 
            "outCoercion" -> "(mint)"|>, <|
           "Name" -> "\"__test__\"", "Load" -> 
            "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
            "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
            "inType" -> {"Integer"}, "outType" -> "Boolean", 
            "inName" -> {"a"}, "outName" -> 
            "!LLU::LibraryData::uncheckedAPI()", "inMember" -> {"integer"}, 
            "outMember" -> "integer", "inCoercion" -> {"(Integer)"}, 
            "outCoercion" -> "(mint)"|>}, 
         ExternalEvaluateLLU`Private`libName$$ = "20220810035130", 
         ExternalEvaluateLLU`Private`load}, 
        Panel[
         TableForm[{{
            Style["Export Function", Bold], 
            Column[{
              OpenerView[{
                Button[
                 Style["test_llu", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"], Appearance -> 
                 Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"test_llu\", \n\t{Integer, Integer}, \n\tInteger]"]]]}}]]}], 
              OpenerView[{
                Button[
                 Style["__test__", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}]}]}, {
            Style["Copy LibraryFunctionDeclaration", Bold], 
            Panel[
             TableForm[{
               Button[
                Style["Release", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  (Slot["Load"]& )[
                   First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                  ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810035130.cpp"], 
                  "D:\\ExternalEvaluate_LLU\\Library\\20220810035130.dll"], 
                Method -> "Queued"], 
               Button[
                Style["Debug", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                   (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                  ToExpression[
                  "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"], 
                  "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810035130.cpp"], 
                  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035130.\
dll"], Method -> "Queued"]}]]}}]], DynamicModuleValues :> {}]}, {
       Style["File Operations", Bold], {
        Button[
         Style["Append to Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10], 
         CellPrint[
          Cell[
          "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
           "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rewrite Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
           Cell[
           "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
            "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rollback Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
         WriteString[
          ExternalEvaluateLLU`Private`filename$$, 
           ExternalEvaluateLLU`Private`src0$$]; 
         Close[ExternalEvaluateLLU`Private`filename$$]]}}}]]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.8690326285768466`*^9, {3.869032813718994*^9, 3.8690328440112495`*^9}, 
   3.8690330806893225`*^9, 3.8690635070727453`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4301e862-556b-41f5-bb28-d16203a8862b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"LoadResult\"\>",
   "EchoLabel"], "  ", 
  TagBox[GridBox[{
     {"\<\"\\\"test_llu\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"Integer", ",", "Integer"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    "Integer", ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810035130.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810035130.dll", "test_llu", {
        Integer, Integer}, Integer],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {"\<\"\\\"__test__\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"True", "|", "False"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810035130.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810035130.dll", "__test__", {
        Integer}, 
        Alternatives[True, False]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]]}]], "Echo",
 CellChangeTimes->{
  3.869063597408016*^9},ExpressionUUID->"4f0dbe4d-fa2e-4fc8-b302-\
0fd6b1a7d581"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"libData Initialization:\"\>",
   "EchoLabel"], "  ", "True"}]], "Echo",
 CellChangeTimes->{
  3.8690635994889455`*^9},ExpressionUUID->"de91fe89-2fd9-4901-bd6a-\
49d2b24b546b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load and test", "Subsection",
 CellChangeTimes->{{3.8690629872776127`*^9, 
  3.869062989368211*^9}},ExpressionUUID->"0279b9d8-8846-4afb-990c-\
49633ed380cb"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
LyKXUF1xFA9GEaWnoCVc7Es5ROswqTPY8lGU3gM2VxYTrX/15+E6zyiRxvPQ
am7rolG62hylitpfPWPMrW+6esf1uusCSMeqYX/lg1YtNpdLHr9HD/1BK+jh
oCtodSqVjKAFZDdg0LI8bjQChitnqduyPbiUN2c+e1QDmvyquS37W1iClvUR
56oM9sefriNB0NpeaYJW2c7Kc8sssc4e4r9tLe/FvtKgl3/u12tpKe6hpy/F
3SfjK1Wz+SoLWZUBSevvUv/0htKHvv1dpqz6fZd/rg9gtz2Sgpb/oLUMWl1L
JSNoAdn1N0ZrGRbcQUud4xr/pC9VswYtPVkt/9bi0Gpheai+82mgWigjTSpb
Xr/nZratEHq0kovPI8md0Nejw315bM/cEqXE8ps23dLsqg/mqg16e0LaBy1v
qYLIPUtqR5kRnJRiBAYta/4Uu+lKd933aNOZ5h6a1T5odT/OEoIWkN1gQcsx
wl1LVK16tMxHePYuqkv6LOVNHV1aRUPQsmzLsrv6U0s1o1kPAbZLl6AlP6GT
m1Ftlt6U1100dbow0lc5yxkwlgu0DVoNpWqp2tqqhLZoUe7meo8Cg5Ztfy0R
TitDlz1K0aPV73EmaAHZdQxaekjoGrTMfiL1deURoHVIVLugJXV31ZtJHrQK
Pd7RubW9eunR0p4NiVn+zqjVU8L58mFZGST0h02Jgla/w/XFXm+GM+UKWh33
KOCLkzFBq8fjTNACshssaIU+L6sTiOVbh/pIdevfq3e1dBSZpVaXtT90rBe3
Pjr0znUGLXsBsH36GqOljLwSGcMdDx6uIkr1UKwKXdoArYcpglZjqbws5ZFS
SstHh5aSOIOWL+d02qNSiqDVvVQyghaQ3WBBy9qnZc8Xjb+j5em0csw2vq1o
3dLly2oa0r8j2Ti4/5IrsylBy/2wEtunz8HwUlgyHwXKfVbVWPGqw6fsALlm
jjOPD1rlcC/pS3/y2Cd/qbzK7SijyNQ4oXfjaGFDHoE21791uNm+fX+NQfiH
s3r1Dnu02lT/QatzqWQELSC7AYNWYUQMT77wLqn/TINlW9YfbbCVWulBM0bo
15uJ/nkHZUFb0CJlbbXuP1iq/fCCkmpcQ3SWw7TkIVtaNNKG98i/ZmDONcf/
eMZ4+0rl3eWyz0r9+Qizgyto7vJR6X69jH9/pUPkmBu9R9oPlpo9iu7j3HwW
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
nP4/1oKEKA==
    "], {{0, 317.42751038423324`}, {481.8417596191669, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{481.8417596191669, 317.42751038423324`},
  PlotRange->{{0, 481.8417596191669}, {0, 317.42751038423324`}}]], "Input",Exp\
ressionUUID->"030c7552-eb33-4680-bc6b-245fc9920b0e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"test$llu", "[", 
  RowBox[{"1", ",", " ", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dec", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"LibraryFunctionDeclaration", "[", 
     RowBox[{
      RowBox[{"LL`test$fc", "\[Rule]", "\"\<test_fc\>\""}], ",", 
      "\"\<D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035130.dll\>\"", 
      ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<MachineInteger\>\"", ",", "\"\<MachineInteger\>\""}], 
        "}"}], "\[Rule]", "\"\<MachineInteger\>\""}]}], "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"test$fc", " ", "=", " ", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{"dec", ",", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Typed", "[", 
        RowBox[{"in1", ",", " ", "\"\<MachineInteger\>\""}], "]"}], ",", " ", 
       RowBox[{"Typed", "[", 
        RowBox[{"in2", ",", " ", "\"\<MachineInteger\>\""}], "]"}]}], "}"}], "|->",
      "\n", "\t\t", 
     RowBox[{"LL`test$fc", "[", 
      RowBox[{"in1", ",", " ", "in2"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"test$fc", "[", 
  RowBox[{"1", ",", " ", "2"}], "]"}]}], "Code",
 CellChangeTimes->{{3.8690328485840163`*^9, 3.8690330032725616`*^9}, {
   3.869033075123111*^9, 3.8690330926203423`*^9}, 3.869033552671238*^9, {
   3.8690637393326025`*^9, 3.8690637423059616`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b8a75927-7461-4c57-b894-f3cea255df13"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.869032997520505*^9, 3.8690330209865136`*^9}, 
   3.869033557520192*^9, 3.869063756829835*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"3688180b-b7c1-43e1-b417-930b8b91be4a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.705078125, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Integer64\"", ",", "\"Integer64\""}], "}"}], 
                    "\[Rule]", "\"Integer64\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.705078125, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Integer64\"", ",", "\"Integer64\""}], "}"}], 
                    "\[Rule]", "\"Integer64\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"Integer64", "Integer64"} -> "Integer64"], 
    "Input" -> Compile`Program[{
       LibraryFunctionDeclaration[
       LL`test$fc -> "test_fc", 
        "D:\\ExternalEvaluate_LLU\\Library\\20220810035130.dll", {
         "MachineInteger", "MachineInteger"} -> "MachineInteger"]}, 
      Function[{
        Typed[$CellContext`in1, "MachineInteger"], 
        Typed[$CellContext`in2, "MachineInteger"]}, 
       LL`test$fc[$CellContext`in1, $CellContext`in2]]], "ErrorFunction" -> 
    Automatic, "InitializationName" -> 
    "Initialization_b3190c26_3307_4ba3_848d_9c0043a689d9", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Windows-x86-64", "VersionData" -> {13.1, 0, 0}, 
    "CompiledIR" -> <|"Windows-x86-64" -> ByteArray[CompressedData["
1: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
ezaa7/d7F+71N5MH/wdLHZ+H
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "D:\\ExternalEvaluate_LLU\\Library\\20220810035130.dll"}, "orcInstance" -> 
    611797200, "orcModuleId" -> 1010288512, "targetMachineId" -> 1005492976|>,
    1166016688, 1166016528, 1166016592, 1166016512, 
   "{\"Integer64\", \"Integer64\"} -> \"Integer64\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.869032997520505*^9, 3.8690330209865136`*^9}, 
   3.869033557520192*^9, 3.869063783595599*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"6ec1dd36-588d-46a1-bb88-c7c0d5c761cb"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.869032997520505*^9, 3.8690330209865136`*^9}, 
   3.869033557520192*^9, 3.8690637836268373`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b9dc50fb-32ab-4266-ae33-48f412153b19"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["C++ Source code", "Subsection",
 CellChangeTimes->{{3.8690629981028967`*^9, 3.8690630031292553`*^9}, {
  3.8690638781091833`*^9, 
  3.8690638790670567`*^9}},ExpressionUUID->"ed385fb5-3bdf-433d-a855-\
40fc9e767a75"],

Cell["\<\
#include \"LLU.h\"
EXTERN_C DLLEXPORT mint test_fc(mint in1, mint in2)
{
\treturn in1 + in2;
}

EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto in1 = mngr.getInteger(0);
\tauto in2 = mngr.getInteger(1);
\tmngr.set(in1 + in2);
\treturn err;
}
EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto a = mngr.getInteger(0);
\tmngr.set(!LLU::LibraryData::uncheckedAPI());
\treturn err;
}\
\>", "Program",
 CellChangeTimes->{{3.8690638320992856`*^9, 
  3.869063862737584*^9}},ExpressionUUID->"40e28c99-7a05-4c91-8436-\
217798c389dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Real", "Section",
 CellChangeTimes->{{3.8690330314489746`*^9, 
  3.8690330339210835`*^9}},ExpressionUUID->"ccc43753-1f8a-47f6-bdb3-\
f8ccbd6178a2"],

Cell[CellGroupData[{

Cell["External Language Cell", "Subsection",
 CellChangeTimes->{
  3.869063181952176*^9},ExpressionUUID->"fa8afbf6-5328-4a03-b603-\
617ae9e06fc5"],

Cell[CellGroupData[{

Cell["\<\
EXTERN_C DLLEXPORT mreal test_fc(mreal in1, mreal in2)
{
\treturn in1 + in2;
}
<||>
Real test_llu(Real in1; Real in2)
{
\tReturn in1 + in2;
}\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"LLU",
 CellChangeTimes->{{3.869033036783615*^9, 3.8690330596904497`*^9}, {
  3.869033567217223*^9, 3.86903358060305*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c6e723f5-f672-4203-8e2e-71941c055183"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Source File:\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810035840.cpp\"\>"}]\
], "Echo",
 CellChangeTimes->{
  3.869063920782302*^9},ExpressionUUID->"4a94dafe-4783-4426-95e0-\
18a2d6f4d184"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Compiling\"\>",
   "EchoLabel"], "  ", "\<\"20220810035840\"\>"}]], "Echo",
 CellChangeTimes->{
  3.869063920829166*^9},ExpressionUUID->"8cd7de5e-99a9-44bb-899a-\
bb65033a2013"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Done\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\"\>"}\
]], "Echo",
 CellChangeTimes->{
  3.8690639318744287`*^9},ExpressionUUID->"20c4dfcd-abb2-4c72-b7af-\
8d435af6b740"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{ExternalEvaluateLLU`Private`stream$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810035840.cpp", 
  ExternalEvaluateLLU`Private`src0$$ = "", 
  ExternalEvaluateLLU`Private`input$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT mreal test_fc(mreal in1, mreal in2)\
\n{\n\treturn in1 + in2;\n}\n<||>\nReal test_llu(Real in1; Real in2)\n{\n\t\
Return in1 + in2;\n}\n<||>\nBoolean __test__(Integer a)\n{\n\tReturn \
!LLU::LibraryData::uncheckedAPI();\n}", 
  ExternalEvaluateLLU`Private`libName$$ = "20220810035840", 
  ExternalEvaluateLLU`Private`src$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT mreal test_fc(mreal in1, mreal in2)\
\n{\n\treturn in1 + in2;\n}\n\nEXTERN_C DLLEXPORT int \
test_llu(WolframLibraryData libData, mint Argc, \nMArgument *Args, MArgument \
Res){\n\tauto err = LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr \
{libData, Argc, Args, Res};\n\tauto in1 = mngr.getReal(0);\n\tauto in2 = \
mngr.getReal(1);\n\tmngr.set(in1 + in2);\n\treturn err;\n}\nEXTERN_C \
DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, \nMArgument \
*Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto a = \
mngr.getInteger(0);\n\tmngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn \
err;\n}", ExternalEvaluateLLU`Private`head$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT mreal test_fc(mreal in1, mreal in2)\
\n{\n\treturn in1 + in2;\n}\n", 
  ExternalEvaluateLLU`Private`functions$$ = {<|
   "Name" -> "\"test_llu\"", "Load" -> 
    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]", "Code" -> 
    "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto in1 = \
mngr.getReal(0);\n\tauto in2 = mngr.getReal(1);\n\tmngr.set(in1 + in2);\n\t\
return err;\n}", "inType" -> {"Real", "Real"}, "outType" -> "Real", 
    "inName" -> {"in1", "in2"}, "outName" -> "in1 + in2", 
    "inMember" -> {"integer", "integer"}, "outMember" -> "integer", 
    "inCoercion" -> {"(Real)", "(Real)"}, "outCoercion" -> "(mint)"|>, <|
   "Name" -> "\"__test__\"", "Load" -> 
    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
    "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto a = \
mngr.getInteger(0);\n\tmngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn \
err;\n}", "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
    "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
    "inMember" -> {"integer"}, "outMember" -> "integer", 
    "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
  ExternalEvaluateLLU`Private`filename$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810035840.cpp", 
  ExternalEvaluateLLU`Private`lib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\20220810035840.dll", 
  ExternalEvaluateLLU`Private`path$$, ExternalEvaluateLLU`Private`a$$, 
  ExternalEvaluateLLU`Private`debuglib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035840.dll"}, 
  PanelBox[
   InterpretationBox[GridBox[{
      {
       StyleBox["\<\"Open source file\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810035840.\
cpp\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>If[
          FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
          ExternalEvaluate["Shell", 
           StringTemplate["code `1`"][
           ExternalEvaluateLLU`Private`filename$$]]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Build\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"20220810035840\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>ExternalEvaluateLLU`Private`build[
          Dynamic[ExternalEvaluateLLU`Private`filename$$], 
          Dynamic[ExternalEvaluateLLU`Private`libName$$]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Load/Unload\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       PanelBox[
        TagBox[GridBox[{
           {
            ButtonBox[
             StyleBox["\<\"Load Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Load Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Unload Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Unload Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
               "Unloaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   Slot["Load"]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"], 
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    Slot["Load"]]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[2.0999999999999996`]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Function[BoxForm`e$, 
          TableForm[BoxForm`e$]]]]},
      {
       StyleBox["\<\"Load Function(Release/Debug)\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       DynamicModuleBox[{ExternalEvaluateLLU`Private`debuglib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035840.dll", 
        ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\20220810035840.dll", 
        ExternalEvaluateLLU`Private`src$$ = 
        "D:\\ExternalEvaluate_LLU\\Source\\20220810035840.cpp", 
        ExternalEvaluateLLU`Private`functions$$ = {<|
         "Name" -> "\"test_llu\"", "Load" -> 
          "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]", "Code" -> 
          "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in1 = mngr.getReal(0);\n\tauto in2 = mngr.getReal(1);\n\t\
mngr.set(in1 + in2);\n\treturn err;\n}", "inType" -> {"Real", "Real"}, 
          "outType" -> "Real", "inName" -> {"in1", "in2"}, "outName" -> 
          "in1 + in2", "inMember" -> {"integer", "integer"}, "outMember" -> 
          "integer", "inCoercion" -> {"(Real)", "(Real)"}, "outCoercion" -> 
          "(mint)"|>, <|
         "Name" -> "\"__test__\"", "Load" -> 
          
          "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
          "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
          "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
          "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
          "inMember" -> {"integer"}, "outMember" -> "integer", 
          "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
        ExternalEvaluateLLU`Private`libName$$ = "20220810035840", 
        ExternalEvaluateLLU`Private`load$$}, 
        PanelBox[
         TagBox[GridBox[{
            {
             StyleBox["\<\"Export Function\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             TagBox[GridBox[{
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["test_llu", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"], Appearance -> Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]},
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["__test__", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"]},
            {
             StyleBox["\<\"Copy LibraryFunctionDeclaration\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             PanelBox[
              TagBox[
               TagBox[GridBox[{
                  {
                   ButtonBox[
                    StyleBox["\<\"Release\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                    ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810035840.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\20220810035840.dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]},
                  {
                   ButtonBox[
                    StyleBox["\<\"Debug\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                    ToExpression[
                    "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"],
                     "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810035840.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035840.\
dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]}
                 },
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                Column],
               Function[BoxForm`e$, 
                TableForm[BoxForm`e$]]]]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[2.0999999999999996`]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$]]]],
        DynamicModuleValues:>{}]},
      {
       StyleBox["\<\"File Operations\"\>",
        StripOnInput->False,
        FontWeight->Bold], GridBox[{
         {
          ButtonBox[
           StyleBox["\<\"Append to Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           ButtonFunction:>CellPrint[
             Cell[
             "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
              "ExternalLanguage", CellEvaluationLanguage -> "LLU"]],
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rewrite Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
              Cell[
              "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
               "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]),
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rollback Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
            WriteString[
             ExternalEvaluateLLU`Private`filename$$, 
              ExternalEvaluateLLU`Private`src0$$]; 
            Close[ExternalEvaluateLLU`Private`filename$$]),
           Evaluator->Automatic,
           Method->"Preemptive"]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.1]}, 
            Offset[0.2]}}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    TableForm[{{
       Style["Open source file", Bold], 
       Button[
        Style["D:\\ExternalEvaluate_LLU\\Source\\20220810035840.cpp", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        If[
         FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
         ExternalEvaluate["Shell", 
          StringTemplate["code `1`"][
          ExternalEvaluateLLU`Private`filename$$]]], Appearance -> Frameless, 
        Method -> "Queued"]}, {
       Style["Build", Bold], 
       Button[
        Style["20220810035840", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        ExternalEvaluateLLU`Private`build[
         Dynamic[ExternalEvaluateLLU`Private`filename$$], 
         Dynamic[ExternalEvaluateLLU`Private`libName$$]], Appearance -> 
        Frameless, Method -> "Queued"]}, {
       Style["Load/Unload", Bold], 
       Panel[
        TableForm[{{
           Button[
            Style["Load Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"], Method -> 
            "Queued"], 
           Button[
            Style["Load Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"], 
            Method -> "Queued"]}, {
           Button[
            Style["Unload Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"], 
            Method -> "Queued"], 
           Button[
            Style["Unload Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
             "Unloaded"], Method -> "Queued"]}, {
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 Slot["Load"]]}& ][ExternalEvaluateLLU`Private`functions$$]], 
             "LoadResult"]], 
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                  Slot["Load"]]]}& ][
              ExternalEvaluateLLU`Private`functions$$]], "LoadResult"]]}}]]}, {
       Style["Load Function(Release/Debug)", Bold], 
       DynamicModule[{
        ExternalEvaluateLLU`Private`debuglib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035840.dll", 
         ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\20220810035840.dll", 
         ExternalEvaluateLLU`Private`src$$ = 
         "D:\\ExternalEvaluate_LLU\\Source\\20220810035840.cpp", 
         ExternalEvaluateLLU`Private`functions$$ = {<|
           "Name" -> "\"test_llu\"", "Load" -> 
            "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]", "Code" -> 
            "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in1 = mngr.getReal(0);\n\tauto in2 = mngr.getReal(1);\n\t\
mngr.set(in1 + in2);\n\treturn err;\n}", "inType" -> {"Real", "Real"}, 
            "outType" -> "Real", "inName" -> {"in1", "in2"}, "outName" -> 
            "in1 + in2", "inMember" -> {"integer", "integer"}, "outMember" -> 
            "integer", "inCoercion" -> {"(Real)", "(Real)"}, "outCoercion" -> 
            "(mint)"|>, <|
           "Name" -> "\"__test__\"", "Load" -> 
            "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
            "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
            "inType" -> {"Integer"}, "outType" -> "Boolean", 
            "inName" -> {"a"}, "outName" -> 
            "!LLU::LibraryData::uncheckedAPI()", "inMember" -> {"integer"}, 
            "outMember" -> "integer", "inCoercion" -> {"(Integer)"}, 
            "outCoercion" -> "(mint)"|>}, 
         ExternalEvaluateLLU`Private`libName$$ = "20220810035840", 
         ExternalEvaluateLLU`Private`load}, 
        Panel[
         TableForm[{{
            Style["Export Function", Bold], 
            Column[{
              OpenerView[{
                Button[
                 Style["test_llu", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"], Appearance -> Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"test_llu\", \n\t{Real, Real}, \n\tReal]"]]]}}]]}], 
              OpenerView[{
                Button[
                 Style["__test__", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}]}]}, {
            Style["Copy LibraryFunctionDeclaration", Bold], 
            Panel[
             TableForm[{
               Button[
                Style["Release", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  (Slot["Load"]& )[
                   First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                  ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810035840.cpp"], 
                  "D:\\ExternalEvaluate_LLU\\Library\\20220810035840.dll"], 
                Method -> "Queued"], 
               Button[
                Style["Debug", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                   (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                  ToExpression[
                  "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"], 
                  "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810035840.cpp"], 
                  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035840.\
dll"], Method -> "Queued"]}]]}}]], DynamicModuleValues :> {}]}, {
       Style["File Operations", Bold], {
        Button[
         Style["Append to Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10], 
         CellPrint[
          Cell[
          "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
           "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rewrite Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
           Cell[
           "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
            "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rollback Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
         WriteString[
          ExternalEvaluateLLU`Private`filename$$, 
           ExternalEvaluateLLU`Private`src0$$]; 
         Close[ExternalEvaluateLLU`Private`filename$$]]}}}]]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.869033720112877*^9, 3.869063932015021*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"389cc8b5-5956-4e9c-8968-e398f8381392"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"LoadResult\"\>",
   "EchoLabel"], "  ", 
  TagBox[GridBox[{
     {"\<\"\\\"test_llu\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"Real", ",", "Real"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    "Real", ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810035840.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810035840.dll", "test_llu", {
        Real, Real}, Real],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {"\<\"\\\"__test__\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"True", "|", "False"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810035840.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810035840.dll", "__test__", {
        Integer}, 
        Alternatives[True, False]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]]}]], "Echo",
 CellChangeTimes->{
  3.869063934879692*^9},ExpressionUUID->"f2b9e84d-1675-41bb-b964-\
291995eb6134"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"libData Initialization:\"\>",
   "EchoLabel"], "  ", "True"}]], "Echo",
 CellChangeTimes->{
  3.8690639379553246`*^9},ExpressionUUID->"b4e90aec-be22-4d52-9894-\
2fa587e885bc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load and test", "Subsection",
 CellChangeTimes->{{3.86906318952352*^9, 
  3.8690631915864363`*^9}},ExpressionUUID->"5f301f21-d665-479a-869c-\
06a7d3254067"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
LyKXUF1xFA9GEaWnoCVc7Es5ROswqTPY8lGU3gM2VxYTrX/15+E6zyiRxvPQ
am7rolG62hylitpfPWPMrW+6esf1uusCSMeqYX/lg1YtNpdLHr9HD/1BK+jh
oCtodSqVjKAFZDdg0LI8bjQChitnqduyPbiUN2c+e1QDmvyquS37W1iClvUR
56oM9sefriNB0NpeaYJW2c7Kc8sssc4e4r9tLe/FvtKgl3/u12tpKe6hpy/F
3SfjK1Wz+SoLWZUBSevvUv/0htKHvv1dpqz6fZd/rg9gtz2Sgpb/oLUMWl1L
JSNoAdn1N0ZrGRbcQUud4xr/pC9VswYtPVkt/9bi0Gpheai+82mgWigjTSpb
Xr/nZratEHq0kovPI8md0Nejw315bM/cEqXE8ps23dLsqg/mqg16e0LaBy1v
qYLIPUtqR5kRnJRiBAYta/4Uu+lKd933aNOZ5h6a1T5odT/OEoIWkN1gQcsx
wl1LVK16tMxHePYuqkv6LOVNHV1aRUPQsmzLsrv6U0s1o1kPAbZLl6AlP6GT
m1Ftlt6U1100dbow0lc5yxkwlgu0DVoNpWqp2tqqhLZoUe7meo8Cg5Ztfy0R
TitDlz1K0aPV73EmaAHZdQxaekjoGrTMfiL1deURoHVIVLugJXV31ZtJHrQK
Pd7RubW9eunR0p4NiVn+zqjVU8L58mFZGST0h02Jgla/w/XFXm+GM+UKWh33
KOCLkzFBq8fjTNACshssaIU+L6sTiOVbh/pIdevfq3e1dBSZpVaXtT90rBe3
Pjr0znUGLXsBsH36GqOljLwSGcMdDx6uIkr1UKwKXdoArYcpglZjqbws5ZFS
SstHh5aSOIOWL+d02qNSiqDVvVQyghaQ3WBBy9qnZc8Xjb+j5em0csw2vq1o
3dLly2oa0r8j2Ti4/5IrsylBy/2wEtunz8HwUlgyHwXKfVbVWPGqw6fsALlm
jjOPD1rlcC/pS3/y2Cd/qbzK7SijyNQ4oXfjaGFDHoE21791uNm+fX+NQfiH
s3r1Dnu02lT/QatzqWQELSC7AYNWYUQMT77wLqn/TINlW9YfbbCVWulBM0bo
15uJ/nkHZUFb0CJlbbXuP1iq/fCCkmpcQ3SWw7TkIVtaNNKG98i/ZmDONcf/
eMZ4+0rl3eWyz0r9+Qizgyto7vJR6X69jH9/pUPkmBu9R9oPlpo9iu7j3HwW
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
nP4/1oKEKA==
    "], {{0, 317.42751038423324`}, {481.8417596191669, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{481.8417596191669, 317.42751038423324`},
  PlotRange->{{0, 481.8417596191669}, {0, 317.42751038423324`}}]], "Input",Exp\
ressionUUID->"5daf4358-1202-4ebd-9d32-5bb5dd6ff34a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"test$llu", "[", 
  RowBox[{"1.", ",", " ", "2."}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dec", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"LibraryFunctionDeclaration", "[", 
     RowBox[{
      RowBox[{"LL`test$fc", "\[Rule]", "\"\<test_fc\>\""}], ",", 
      "\"\<D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035840.dll\>\"", 
      ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<MachineReal\>\"", ",", "\"\<MachineReal\>\""}], "}"}], 
       "\[Rule]", "\"\<MachineReal\>\""}]}], "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"test$fc", " ", "=", " ", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{"dec", ",", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Typed", "[", 
        RowBox[{"in1", ",", " ", "\"\<MachineReal\>\""}], "]"}], ",", " ", 
       RowBox[{"Typed", "[", 
        RowBox[{"in2", ",", " ", "\"\<MachineReal\>\""}], "]"}]}], "}"}], "|->",
      "\n", "\t\t", 
     RowBox[{"LL`test$fc", "[", 
      RowBox[{"in1", ",", " ", "in2"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"test$fc", "[", 
  RowBox[{"1.", ",", " ", "2."}], "]"}]}], "Code",
 CellChangeTimes->{{3.8690337634843216`*^9, 3.8690337756749773`*^9}, {
  3.869033861483136*^9, 3.869033874299856*^9}, {3.869063945588986*^9, 
  3.869063947058019*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b67a15e7-771b-4c02-818b-aa1de6b34abd"],

Cell[BoxData["3.`"], "Output",
 CellChangeTimes->{{3.8690338499514227`*^9, 3.8690338749736443`*^9}, 
   3.86906394790279*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"a77c2ec2-ab76-4473-affb-9a77bfb889d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.705078125, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Real64\"", ",", "\"Real64\""}], "}"}], 
                    "\[Rule]", "\"Real64\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.705078125, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Real64\"", ",", "\"Real64\""}], "}"}], 
                    "\[Rule]", "\"Real64\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"Real64", "Real64"} -> "Real64"], "Input" -> 
    Compile`Program[{
       LibraryFunctionDeclaration[
       LL`test$fc -> "test_fc", 
        "D:\\ExternalEvaluate_LLU\\Library\\20220810035840.dll", {
         "MachineReal", "MachineReal"} -> "MachineReal"]}, 
      Function[{
        Typed[$CellContext`in1, "MachineReal"], 
        Typed[$CellContext`in2, "MachineReal"]}, 
       LL`test$fc[$CellContext`in1, $CellContext`in2]]], "ErrorFunction" -> 
    Automatic, "InitializationName" -> 
    "Initialization_51397c31_f204_45c4_9143_6a28e2cacb34", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Windows-x86-64", "VersionData" -> {13.1, 0, 0}, 
    "CompiledIR" -> <|"Windows-x86-64" -> ByteArray[CompressedData["
1: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
BEBHivb71XthsjOLe/1FMPFDYfqMMEP8U+iznzXY6UMChIC7HW/AMRYKZZ9r
ajQ1LzGrkB2bQFCBnJz54oahRuP5CsQ/Wnd+VFeXC83QJx9gfQrSMkCWgT5I
MxHzbine4dvG4HNNfr6fwdGSEz3mMaq3C/RkcYZ8cAydBIUnOVhYuX0+f9fV
okVU6sAC/k9rjdQCJfesYnNp5UKpNEUmHeiwDQSUKy8ohhERl1Ic/Sfzjg+i
qA/aqA/0mVrTBUarYaN8b4WvPBvXPxrwRybWJFWW+DTLuVyCNWga2EY84A6m
dGoIam3UDZAEy+st9OoesaQl4MJHG4Ww3rIJoEziI+O//tLHoRQ/zr2BF961
9vT77B7q1vC7Iag/4p1SvzuHTExgXApSAmHMjUgc31r+jK6um/vxawOZYXap
Bqe2MqEOep/9LVH7R+P2r962uSVqsyJqk9apgTZTTQMcjTCVsSQDlBk4WYYk
u+YUfVcMQ/zNEP8H6/EHLdyuZRpOVurOlBgEmncljt2EID+bwlnMK+1PFOhP
nHpDahAlzZON46SJ/NCAxxOiblzx0RyWnP+0oWj/6GdSqnd54vu7Bv+cWmtb
WJItqb74tammmn0BS8cHNUAlUlucBMFhS4Spa8gPnQJ6DgrO8VT/poMs7aus
yImJJ5JyZXOlqbwcz3rvkTw/HQYTQYleEOcrcejLH1O2yTgO4ZxMQT4JIJ+C
RSa4jsSOPZw+r77vTV0Z2zhrTc43fBsqsXwDOZ8GhNkBCmWRFlMmtG8i0UYq
ZSnLCtgHuY/ho9JQVB/mHofFiEyM8Zk6REvifjXnjGmMesNPAWjCCfFdCHFb
6qzkl90q3IRsmyC7PrnJz187mF+W+u2XN8SiVaX8o9uNQ1H2+5wo+7f5SDV4
vvRWazxW14/fl7BCIqFfP9z8VTCa2kdffnJFRjy137u+F0R11zdrtwH9J4+a
eX1PJk5W1Jhy42zVk9sXgFMzj4/pxmN510LE9rMMwxcEkH8zlSY9xfodq9ZQ
SbHPsGJj7PAtYaYfKczum4z4vvwClodhqYy/DWrjeUxT+unhjT0YABuJvd9F
kOrocxnSzXf1g/h4+psDYg+mWRp9cWbG3//gDqXlHCgXg9hZP0tnxxsA/Yi6
Q2flRmhzLuRNsPBn5UqIAYjJZ+ns+EB8XOCu8bTdF+P8i/fJXwexs2+WzsoP
wnYauENn5fT/B/wduk1n5bNYzNKoP3iMX8uN7VkYi2k6DvVN9Z56c0N9u9lT
39xU2txkX2mub/LY3R6jw1p+T6exIF+uWmqV5xsdMlJhVBRYFUZVvkJuLDTL
lHaZ1Wy1yBW0tlFX3tTabI0qRfnVLrPTaXcZdeaGhqigzOt03RnzC3ubcfb+
LHO5ml1uu6fMa7U76c5Vng0N9hrozwq7x7i8odnsgUrWutv9enOTDerpXHaz
x76y2m5uoCeHdzCZl0/YbGa50iI3y1WFSnuB3Gq3LLUpZEqyQLXUbC2wKm3W
QtJRaDN7lYVGeDE7rUvaYvf0kkZ3q3X1ytu3+s+60/PaGvIq/w8A4uGyWsPj
1TXL6J7bzM+A+p6J7sb83o57saZz4H9nVqac
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "D:\\ExternalEvaluate_LLU\\Library\\20220810035840.dll"}, "orcInstance" -> 
    1011212544, "orcModuleId" -> 1010268288, "targetMachineId" -> 
    1010286176|>, 39715008, 39714832, 39714896, 39714816, 
   "{\"Real64\", \"Real64\"} -> \"Real64\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8690338499514227`*^9, 3.8690338749736443`*^9}, 
   3.869063948246417*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ddd866ac-404d-49b2-adae-bd007f738f6c"],

Cell[BoxData["3.`"], "Output",
 CellChangeTimes->{{3.8690338499514227`*^9, 3.8690338749736443`*^9}, 
   3.869063948418254*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"78f4bae3-9fc2-4d6e-88c4-845d4cf80cd9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["C++ Source code", "Subsection",
 CellChangeTimes->{{3.8690631954187512`*^9, 3.8690631970601845`*^9}, {
  3.8690639103411055`*^9, 
  3.8690639111077056`*^9}},ExpressionUUID->"5ac165bd-d6d3-4dab-949d-\
a238cdff54d9"],

Cell["\<\
#include \"LLU.h\"
EXTERN_C DLLEXPORT mreal test_fc(mreal in1, mreal in2)
{
\treturn in1 + in2;
}

EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto in1 = mngr.getReal(0);
\tauto in2 = mngr.getReal(1);
\tmngr.set(in1 + in2);
\treturn err;
}
EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto a = mngr.getInteger(0);
\tmngr.set(!LLU::LibraryData::uncheckedAPI());
\treturn err;
}\
\>", "Program",
 CellChangeTimes->{{3.8690638320992856`*^9, 3.869063862737584*^9}, 
   3.8690639655260153`*^9},ExpressionUUID->"c76660d9-781f-49b5-a6a7-\
0b9df5ce60ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Complex", "Section",
 CellChangeTimes->{{3.869033884098819*^9, 
  3.869033886367222*^9}},ExpressionUUID->"a6913028-cc56-4493-a4e1-\
17e08ec49af8"],

Cell[CellGroupData[{

Cell["External Language Cell", "Subsection",
 CellChangeTimes->{{3.8690632480527425`*^9, 
  3.869063249132502*^9}},ExpressionUUID->"edfe8374-21b2-4f40-820f-\
31c858cea7d3"],

Cell[CellGroupData[{

Cell["\<\
<||>
Complex test_llu(Complex in1; Complex in2)
{
\tReturn in1 + in2;
}\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"LLU",
 CellChangeTimes->{{3.86903389101472*^9, 3.8690339822477474`*^9}, {
   3.869034041708099*^9, 3.869034046975912*^9}, {3.8690342976977015`*^9, 
   3.869034423887007*^9}, {3.8690344972392883`*^9, 3.8690345041810503`*^9}, {
   3.8690345345687013`*^9, 3.869034558273387*^9}, {3.8690347287865353`*^9, 
   3.8690347667807612`*^9}, {3.869034871093115*^9, 3.8690349031503205`*^9}, 
   3.8690350057477837`*^9, {3.869035040869483*^9, 3.8690350538255024`*^9}, 
   3.8690350869041643`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"17aa0ce5-225b-486c-a5ad-746d4de93057"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Source File:\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810035933.cpp\"\>"}]\
], "Echo",
 CellChangeTimes->{
  3.869063973738661*^9},ExpressionUUID->"69072571-cd0c-4b8e-bfde-\
2ae6dd8eff20"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Compiling\"\>",
   "EchoLabel"], "  ", "\<\"20220810035933\"\>"}]], "Echo",
 CellChangeTimes->{
  3.8690639737855268`*^9},ExpressionUUID->"e4d0f228-660c-4a74-9e66-\
dd87963acbc5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Done\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\"\>"}\
]], "Echo",
 CellChangeTimes->{
  3.8690639846320505`*^9},ExpressionUUID->"2ddc552d-b8a5-46cc-a13f-\
ca1dc70047cc"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{ExternalEvaluateLLU`Private`stream$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810035933.cpp", 
  ExternalEvaluateLLU`Private`src0$$ = "", 
  ExternalEvaluateLLU`Private`input$$ = 
  "#include \"LLU.h\"\n<||>\nComplex test_llu(Complex in1; Complex in2)\n{\n\t\
Return in1 + in2;\n}\n<||>\nBoolean __test__(Integer a)\n{\n\tReturn \
!LLU::LibraryData::uncheckedAPI();\n}", 
  ExternalEvaluateLLU`Private`libName$$ = "20220810035933", 
  ExternalEvaluateLLU`Private`src$$ = 
  "#include \"LLU.h\"\n\nEXTERN_C DLLEXPORT int test_llu(WolframLibraryData \
libData, mint Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in1 = mngr.getComplex(0);\n\tauto in2 = mngr.getComplex(1);\n\t\
mngr.set(in1 + in2);\n\treturn err;\n}\nEXTERN_C DLLEXPORT int \
__test__(WolframLibraryData libData, mint Argc, \nMArgument *Args, MArgument \
Res){\n\tauto err = LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr \
{libData, Argc, Args, Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
  ExternalEvaluateLLU`Private`head$$ = "#include \"LLU.h\"\n", 
  ExternalEvaluateLLU`Private`functions$$ = {<|
   "Name" -> "\"test_llu\"", "Load" -> 
    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]", "Code" -> 
    "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto in1 = \
mngr.getComplex(0);\n\tauto in2 = mngr.getComplex(1);\n\tmngr.set(in1 + in2);\
\n\treturn err;\n}", "inType" -> {"Complex", "Complex"}, "outType" -> 
    "Complex", "inName" -> {"in1", "in2"}, "outName" -> "in1 + in2", 
    "inMember" -> {"integer", "integer"}, "outMember" -> "integer", 
    "inCoercion" -> {"(Complex)", "(Complex)"}, "outCoercion" -> "(mint)"|>, <|
   "Name" -> "\"__test__\"", "Load" -> 
    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
    "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto a = \
mngr.getInteger(0);\n\tmngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn \
err;\n}", "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
    "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
    "inMember" -> {"integer"}, "outMember" -> "integer", 
    "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
  ExternalEvaluateLLU`Private`filename$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810035933.cpp", 
  ExternalEvaluateLLU`Private`lib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\20220810035933.dll", 
  ExternalEvaluateLLU`Private`path$$, ExternalEvaluateLLU`Private`a$$, 
  ExternalEvaluateLLU`Private`debuglib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035933.dll"}, 
  PanelBox[
   InterpretationBox[GridBox[{
      {
       StyleBox["\<\"Open source file\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810035933.\
cpp\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>If[
          FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
          ExternalEvaluate["Shell", 
           StringTemplate["code `1`"][
           ExternalEvaluateLLU`Private`filename$$]]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Build\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"20220810035933\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>ExternalEvaluateLLU`Private`build[
          Dynamic[ExternalEvaluateLLU`Private`filename$$], 
          Dynamic[ExternalEvaluateLLU`Private`libName$$]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Load/Unload\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       PanelBox[
        TagBox[GridBox[{
           {
            ButtonBox[
             StyleBox["\<\"Load Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Load Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Unload Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Unload Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
               "Unloaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   Slot["Load"]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"], 
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    Slot["Load"]]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[2.0999999999999996`]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Function[BoxForm`e$, 
          TableForm[BoxForm`e$]]]]},
      {
       StyleBox["\<\"Load Function(Release/Debug)\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       DynamicModuleBox[{ExternalEvaluateLLU`Private`debuglib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035933.dll", 
        ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\20220810035933.dll", 
        ExternalEvaluateLLU`Private`src$$ = 
        "D:\\ExternalEvaluate_LLU\\Source\\20220810035933.cpp", 
        ExternalEvaluateLLU`Private`functions$$ = {<|
         "Name" -> "\"test_llu\"", "Load" -> 
          "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]", "Code" -> 
          "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in1 = mngr.getComplex(0);\n\tauto in2 = mngr.getComplex(1);\n\t\
mngr.set(in1 + in2);\n\treturn err;\n}", "inType" -> {"Complex", "Complex"}, 
          "outType" -> "Complex", "inName" -> {"in1", "in2"}, "outName" -> 
          "in1 + in2", "inMember" -> {"integer", "integer"}, "outMember" -> 
          "integer", "inCoercion" -> {"(Complex)", "(Complex)"}, 
          "outCoercion" -> "(mint)"|>, <|
         "Name" -> "\"__test__\"", "Load" -> 
          "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
          
          "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
          "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
          "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
          "inMember" -> {"integer"}, "outMember" -> "integer", 
          "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
        ExternalEvaluateLLU`Private`libName$$ = "20220810035933", 
        ExternalEvaluateLLU`Private`load$$}, 
        PanelBox[
         TagBox[GridBox[{
            {
             StyleBox["\<\"Export Function\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             TagBox[GridBox[{
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["test_llu", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"], Appearance -> 
                    Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]},
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["__test__", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"]},
            {
             StyleBox["\<\"Copy LibraryFunctionDeclaration\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             PanelBox[
              TagBox[
               TagBox[GridBox[{
                  {
                   ButtonBox[
                    StyleBox["\<\"Release\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                    ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810035933.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\20220810035933.dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]},
                  {
                   ButtonBox[
                    StyleBox["\<\"Debug\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                    ToExpression[
                    "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"],
                     "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810035933.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035933.\
dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]}
                 },
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                Column],
               Function[BoxForm`e$, 
                TableForm[BoxForm`e$]]]]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[2.0999999999999996`]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$]]]],
        DynamicModuleValues:>{}]},
      {
       StyleBox["\<\"File Operations\"\>",
        StripOnInput->False,
        FontWeight->Bold], GridBox[{
         {
          ButtonBox[
           StyleBox["\<\"Append to Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           ButtonFunction:>CellPrint[
             Cell[
             "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
              "ExternalLanguage", CellEvaluationLanguage -> "LLU"]],
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rewrite Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
              Cell[
              "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
               "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]),
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rollback Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
            WriteString[
             ExternalEvaluateLLU`Private`filename$$, 
              ExternalEvaluateLLU`Private`src0$$]; 
            Close[ExternalEvaluateLLU`Private`filename$$]),
           Evaluator->Automatic,
           Method->"Preemptive"]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.1]}, 
            Offset[0.2]}}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    TableForm[{{
       Style["Open source file", Bold], 
       Button[
        Style["D:\\ExternalEvaluate_LLU\\Source\\20220810035933.cpp", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        If[
         FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
         ExternalEvaluate["Shell", 
          StringTemplate["code `1`"][
          ExternalEvaluateLLU`Private`filename$$]]], Appearance -> Frameless, 
        Method -> "Queued"]}, {
       Style["Build", Bold], 
       Button[
        Style["20220810035933", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        ExternalEvaluateLLU`Private`build[
         Dynamic[ExternalEvaluateLLU`Private`filename$$], 
         Dynamic[ExternalEvaluateLLU`Private`libName$$]], Appearance -> 
        Frameless, Method -> "Queued"]}, {
       Style["Load/Unload", Bold], 
       Panel[
        TableForm[{{
           Button[
            Style["Load Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"], Method -> 
            "Queued"], 
           Button[
            Style["Load Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"], 
            Method -> "Queued"]}, {
           Button[
            Style["Unload Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"], 
            Method -> "Queued"], 
           Button[
            Style["Unload Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
             "Unloaded"], Method -> "Queued"]}, {
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 Slot["Load"]]}& ][ExternalEvaluateLLU`Private`functions$$]], 
             "LoadResult"]], 
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                  Slot["Load"]]]}& ][
              ExternalEvaluateLLU`Private`functions$$]], "LoadResult"]]}}]]}, {
       Style["Load Function(Release/Debug)", Bold], 
       DynamicModule[{
        ExternalEvaluateLLU`Private`debuglib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035933.dll", 
         ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\20220810035933.dll", 
         ExternalEvaluateLLU`Private`src$$ = 
         "D:\\ExternalEvaluate_LLU\\Source\\20220810035933.cpp", 
         ExternalEvaluateLLU`Private`functions$$ = {<|
           "Name" -> "\"test_llu\"", "Load" -> 
            "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]", "Code" -> 
            "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in1 = mngr.getComplex(0);\n\tauto in2 = mngr.getComplex(1);\n\t\
mngr.set(in1 + in2);\n\treturn err;\n}", "inType" -> {"Complex", "Complex"}, 
            "outType" -> "Complex", "inName" -> {"in1", "in2"}, "outName" -> 
            "in1 + in2", "inMember" -> {"integer", "integer"}, "outMember" -> 
            "integer", "inCoercion" -> {"(Complex)", "(Complex)"}, 
            "outCoercion" -> "(mint)"|>, <|
           "Name" -> "\"__test__\"", "Load" -> 
            "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
            "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
            "inType" -> {"Integer"}, "outType" -> "Boolean", 
            "inName" -> {"a"}, "outName" -> 
            "!LLU::LibraryData::uncheckedAPI()", "inMember" -> {"integer"}, 
            "outMember" -> "integer", "inCoercion" -> {"(Integer)"}, 
            "outCoercion" -> "(mint)"|>}, 
         ExternalEvaluateLLU`Private`libName$$ = "20220810035933", 
         ExternalEvaluateLLU`Private`load}, 
        Panel[
         TableForm[{{
            Style["Export Function", Bold], 
            Column[{
              OpenerView[{
                Button[
                 Style["test_llu", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"], Appearance -> 
                 Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"test_llu\", \n\t{Complex, Complex}, \n\tComplex]"]]]}}]]}], 
              OpenerView[{
                Button[
                 Style["__test__", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810035933.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}]}]}, {
            Style["Copy LibraryFunctionDeclaration", Bold], 
            Panel[
             TableForm[{
               Button[
                Style["Release", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  (Slot["Load"]& )[
                   First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                  ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810035933.cpp"], 
                  "D:\\ExternalEvaluate_LLU\\Library\\20220810035933.dll"], 
                Method -> "Queued"], 
               Button[
                Style["Debug", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                   (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                  ToExpression[
                  "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"], 
                  "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810035933.cpp"], 
                  
                  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810035933.\
dll"], Method -> "Queued"]}]]}}]], DynamicModuleValues :> {}]}, {
       Style["File Operations", Bold], {
        Button[
         Style["Append to Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10], 
         CellPrint[
          Cell[
          "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
           "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rewrite Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
           Cell[
           "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
            "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rollback Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
         WriteString[
          ExternalEvaluateLLU`Private`filename$$, 
           ExternalEvaluateLLU`Private`src0$$]; 
         Close[ExternalEvaluateLLU`Private`filename$$]]}}}]]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.8690339496920543`*^9, 3.869034517187369*^9, 3.8690345509870453`*^9, 
   3.869034623687677*^9, {3.8690348908575425`*^9, 3.869034911081764*^9}, 
   3.8690350631261764`*^9, 3.869035100176635*^9, 3.8690639847416077`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"ff35f81a-de3f-4d34-a9e7-8e6abc75816a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"LoadResult\"\>",
   "EchoLabel"], "  ", 
  TagBox[GridBox[{
     {"\<\"\\\"test_llu\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"Complex", ",", "Complex"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    "Complex", ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810035933.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810035933.dll", "test_llu", {
        Complex, Complex}, Complex],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {"\<\"\\\"__test__\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"True", "|", "False"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810035933.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810035933.dll", "__test__", {
        Integer}, 
        Alternatives[True, False]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]]}]], "Echo",
 CellChangeTimes->{
  3.8690639914831285`*^9},ExpressionUUID->"5f89771d-cfe4-429d-ab09-\
50d5436a01d1"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"libData Initialization:\"\>",
   "EchoLabel"], "  ", "True"}]], "Echo",
 CellChangeTimes->{
  3.869063993438766*^9},ExpressionUUID->"0016b2ee-641f-4f4c-873f-\
c160ecaaefdc"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Copy LibraryFunctionDeclaration:\"\>",
   "EchoLabel"], 
  "  ", "\<\"There are no functions to FunctionCompile\"\>"}]], "Echo",
 CellChangeTimes->{
  3.8690639935328407`*^9},ExpressionUUID->"f01a9ee2-fe52-46c3-a6fe-\
f7c70516e484"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load and test", "Subsection",
 CellChangeTimes->{{3.869063257746723*^9, 
  3.8690632601851196`*^9}},ExpressionUUID->"dc635f25-9d8b-438d-80ec-\
5b3c61ca0d56"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
LyKXUF1xFA9GEaWnoCVc7Es5ROswqTPY8lGU3gM2VxYTrX/15+E6zyiRxvPQ
am7rolG62hylitpfPWPMrW+6esf1uusCSMeqYX/lg1YtNpdLHr9HD/1BK+jh
oCtodSqVjKAFZDdg0LI8bjQChitnqduyPbiUN2c+e1QDmvyquS37W1iClvUR
56oM9sefriNB0NpeaYJW2c7Kc8sssc4e4r9tLe/FvtKgl3/u12tpKe6hpy/F
3SfjK1Wz+SoLWZUBSevvUv/0htKHvv1dpqz6fZd/rg9gtz2Sgpb/oLUMWl1L
JSNoAdn1N0ZrGRbcQUud4xr/pC9VswYtPVkt/9bi0Gpheai+82mgWigjTSpb
Xr/nZratEHq0kovPI8md0Nejw315bM/cEqXE8ps23dLsqg/mqg16e0LaBy1v
qYLIPUtqR5kRnJRiBAYta/4Uu+lKd933aNOZ5h6a1T5odT/OEoIWkN1gQcsx
wl1LVK16tMxHePYuqkv6LOVNHV1aRUPQsmzLsrv6U0s1o1kPAbZLl6AlP6GT
m1Ftlt6U1100dbow0lc5yxkwlgu0DVoNpWqp2tqqhLZoUe7meo8Cg5Ztfy0R
TitDlz1K0aPV73EmaAHZdQxaekjoGrTMfiL1deURoHVIVLugJXV31ZtJHrQK
Pd7RubW9eunR0p4NiVn+zqjVU8L58mFZGST0h02Jgla/w/XFXm+GM+UKWh33
KOCLkzFBq8fjTNACshssaIU+L6sTiOVbh/pIdevfq3e1dBSZpVaXtT90rBe3
Pjr0znUGLXsBsH36GqOljLwSGcMdDx6uIkr1UKwKXdoArYcpglZjqbws5ZFS
SstHh5aSOIOWL+d02qNSiqDVvVQyghaQ3WBBy9qnZc8Xjb+j5em0csw2vq1o
3dLly2oa0r8j2Ti4/5IrsylBy/2wEtunz8HwUlgyHwXKfVbVWPGqw6fsALlm
jjOPD1rlcC/pS3/y2Cd/qbzK7SijyNQ4oXfjaGFDHoE21791uNm+fX+NQfiH
s3r1Dnu02lT/QatzqWQELSC7AYNWYUQMT77wLqn/TINlW9YfbbCVWulBM0bo
15uJ/nkHZUFb0CJlbbXuP1iq/fCCkmpcQ3SWw7TkIVtaNNKG98i/ZmDONcf/
eMZ4+0rl3eWyz0r9+Qizgyto7vJR6X69jH9/pUPkmBu9R9oPlpo9iu7j3HwW
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
nP4/1oKEKA==
    "], {{0, 317.42751038423324`}, {481.8417596191669, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{481.8417596191669, 317.42751038423324`},
  PlotRange->{{0, 481.8417596191669}, {0, 317.42751038423324`}}]], "Input",Exp\
ressionUUID->"34d81003-2e11-47fc-9606-726f3ab97a8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "\:4e0d\:7528LibraryLinkUtilities", "\:ff0c", 
    "\:6211\:5c31\:7528\:4e0d\:6765mcomplex"}], "*)"}], "\n", 
  RowBox[{"test$llu", "[", 
   RowBox[{
    RowBox[{"1.", "+", 
     RowBox[{"1.", " ", "I"}]}], ",", " ", 
    RowBox[{"2.", "+", 
     RowBox[{"2.", " ", "I"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.869034625109408*^9, 3.869034693364479*^9}, {
  3.8690350957083626`*^9, 3.869035113770808*^9}, {3.8690628270321035`*^9, 
  3.869062866194931*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"55041976-df99-48a0-837e-eb5c0cc1863f"],

Cell[BoxData[
 RowBox[{"3.`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.8690346808610463`*^9, 3.8690346940366697`*^9}, 
   3.869035116815447*^9, 3.869064014314844*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"14fc7b72-4070-4f39-af6a-2b99d78b5aca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["C++ Source Code", "Subsection",
 CellChangeTimes->{{3.869063368022788*^9, 
  3.8690633806559443`*^9}},ExpressionUUID->"4aea9306-0d98-4084-bb9d-\
43315487fb42"],

Cell["\<\
#include \"LLU.h\"

EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto in1 = mngr.getComplex(0);
\tauto in2 = mngr.getComplex(1);
\tmngr.set(in1 + in2);
\treturn err;
}
EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto a = mngr.getInteger(0);
\tmngr.set(!LLU::LibraryData::uncheckedAPI());
\treturn err;
}\
\>", "Program",
 CellChangeTimes->{{3.8690638320992856`*^9, 3.869063862737584*^9}, 
   3.869064030726689*^9},ExpressionUUID->"e5c4a6d5-4092-4325-b672-\
a1d92f00dd89"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. MTensor", "Section",
 CellChangeTimes->{{3.8690351220015626`*^9, 
  3.869035128736087*^9}},ExpressionUUID->"ee600c78-6ffe-467e-a748-\
e10e97097ce5"],

Cell[CellGroupData[{

Cell["External Language Cell", "Subsection",
 CellChangeTimes->{{3.8690633846443663`*^9, 
  3.869063386582882*^9}},ExpressionUUID->"4b67f516-0150-48db-8e5d-\
4fe728cd9002"],

Cell[CellGroupData[{

Cell["\<\
EXTERN_C DLLEXPORT MTensor test_fc(MTensor in1, MTensor in2)
{
\tauto in_data1 = (mreal*)in1->data;
\tauto in_data2 = (mreal*)in2->data;
\tLLU::MArrayDimensions dims (in1->dims, in1->rank);
\tLLU::Tensor<mreal> res (0, dims);
\tfor (mint i = 0; i < in1->nelems; i++)
\t{
\t\tres[i] = in_data1[i] + in_data2[i];
\t}
\treturn res.abandonContainer();
}
<||>
Tensor test_llu(Tensor<mreal, LLU::Passing::Shared> in1; Tensor<mreal, \
LLU::Passing::Shared> in2)
{
\tLLU::Tensor<mreal> res (0, in1.dimensions());
\tfor (mint i = 0; i < in1.getFlattenedLength(); i++)
\t{
\t\tres[i] = in1[i] + in2[i];
\t}
\tReturn res;
}\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"LLU",
 CellChangeTimes->{{3.8690346341601253`*^9, 3.869034635675506*^9}, {
   3.8690351349585524`*^9, 3.8690352158752537`*^9}, {3.8690354611831555`*^9, 
   3.8690355257715297`*^9}, {3.8690357612869463`*^9, 3.869035809652033*^9}, {
   3.869035917684366*^9, 3.8690359643156767`*^9}, {3.869036034084035*^9, 
   3.86903609148515*^9}, {3.8690361670662284`*^9, 3.8690362779100475`*^9}, {
   3.8690363369695597`*^9, 3.8690363399485474`*^9}, {3.8690367067516575`*^9, 
   3.8690367351870146`*^9}, {3.8690369640803022`*^9, 
   3.8690370928246584`*^9}, {3.8690371317697315`*^9, 3.86903715172183*^9}, {
   3.8690372113981824`*^9, 3.8690372458550344`*^9}, {3.8690372938729067`*^9, 
   3.869037311425959*^9}, 3.8690373722409687`*^9, {3.8690377553188353`*^9, 
   3.869037791032886*^9}, {3.869037829048399*^9, 3.869037846645707*^9}, {
   3.8690381230867977`*^9, 3.86903815254786*^9}, {3.869038210737928*^9, 
   3.8690382585639052`*^9}, {3.8690390724092255`*^9, 
   3.8690390733162785`*^9}, {3.869039155739507*^9, 3.8690391567906747`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e6bf3c3e-50c0-4ddc-93dc-a80e43e274d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Source File:\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810040035.cpp\"\>"}]\
], "Echo",
 CellChangeTimes->{
  3.869064035487897*^9},ExpressionUUID->"8d438a53-6bde-4d55-842d-\
e8ac879437e8"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Compiling\"\>",
   "EchoLabel"], "  ", "\<\"20220810040035\"\>"}]], "Echo",
 CellChangeTimes->{
  3.8690640355655427`*^9},ExpressionUUID->"a6a9b2f8-3c2b-471d-83c2-\
7b3747601bea"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Done\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\"\>"}\
]], "Echo",
 CellChangeTimes->{
  3.8690640490970135`*^9},ExpressionUUID->"24df49f8-d1d6-40ff-90d8-\
f2f724972e63"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{ExternalEvaluateLLU`Private`stream$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810040035.cpp", 
  ExternalEvaluateLLU`Private`src0$$ = "", 
  ExternalEvaluateLLU`Private`input$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT MTensor test_fc(MTensor in1, \
MTensor in2)\n{\n\tauto in_data1 = (mreal*)in1->data;\n\tauto in_data2 = \
(mreal*)in2->data;\n\tLLU::MArrayDimensions dims (in1->dims, in1->rank);\n\t\
LLU::Tensor<mreal> res (0, dims);\n\tfor (mint i = 0; i < in1->nelems; i++)\n\
\t{\n\t\tres[i] = in_data1[i] + in_data2[i];\n\t}\n\treturn \
res.abandonContainer();\n}\n<||>\nTensor test_llu(Tensor<mreal, \
LLU::Passing::Shared> in1; Tensor<mreal, LLU::Passing::Shared> in2)\n{\n\t\
LLU::Tensor<mreal> res (0, in1.dimensions());\n\tfor (mint i = 0; i < \
in1.getFlattenedLength(); i++)\n\t{\n\t\tres[i] = in1[i] + in2[i];\n\t}\n\t\
Return res;\n}\n<||>\nBoolean __test__(Integer a)\n{\n\tReturn \
!LLU::LibraryData::uncheckedAPI();\n}", 
  ExternalEvaluateLLU`Private`libName$$ = "20220810040035", 
  ExternalEvaluateLLU`Private`src$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT MTensor test_fc(MTensor in1, \
MTensor in2)\n{\n\tauto in_data1 = (mreal*)in1->data;\n\tauto in_data2 = \
(mreal*)in2->data;\n\tLLU::MArrayDimensions dims (in1->dims, in1->rank);\n\t\
LLU::Tensor<mreal> res (0, dims);\n\tfor (mint i = 0; i < in1->nelems; i++)\n\
\t{\n\t\tres[i] = in_data1[i] + in_data2[i];\n\t}\n\treturn \
res.abandonContainer();\n}\n\nEXTERN_C DLLEXPORT int \
test_llu(WolframLibraryData libData, mint Argc, \nMArgument *Args, MArgument \
Res){\n\tauto err = LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr \
{libData, Argc, Args, Res};\n\tauto in1 = mngr.getTensor<mreal, \
LLU::Passing::Shared>(0);\n\tauto in2 = mngr.getTensor<mreal, \
LLU::Passing::Shared>(1);\n\t\tLLU::Tensor<mreal> res (0, in1.dimensions());\n\
\t\tfor (mint i = 0; i < in1.getFlattenedLength(); i++)\n\t\t{\n\t\t\tres[i] \
= in1[i] + in2[i];\n\t\t}\n\tmngr.set(res);\n\treturn err;\n}\nEXTERN_C \
DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, \nMArgument \
*Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto a = \
mngr.getInteger(0);\n\tmngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn \
err;\n}", ExternalEvaluateLLU`Private`head$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT MTensor test_fc(MTensor in1, \
MTensor in2)\n{\n\tauto in_data1 = (mreal*)in1->data;\n\tauto in_data2 = \
(mreal*)in2->data;\n\tLLU::MArrayDimensions dims (in1->dims, in1->rank);\n\t\
LLU::Tensor<mreal> res (0, dims);\n\tfor (mint i = 0; i < in1->nelems; i++)\n\
\t{\n\t\tres[i] = in_data1[i] + in_data2[i];\n\t}\n\treturn \
res.abandonContainer();\n}\n", 
  ExternalEvaluateLLU`Private`functions$$ = {<|
   "Name" -> "\"test_llu\"", "Load" -> 
    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]", 
    "Code" -> 
    "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto in1 = \
mngr.getTensor<mreal, LLU::Passing::Shared>(0);\n\tauto in2 = \
mngr.getTensor<mreal, LLU::Passing::Shared>(1);\n\t\tLLU::Tensor<mreal> res \
(0, in1.dimensions());\n\t\tfor (mint i = 0; i < in1.getFlattenedLength(); \
i++)\n\t\t{\n\t\t\tres[i] = in1[i] + in2[i];\n\t\t}\n\tmngr.set(res);\n\t\
return err;\n}", 
    "inType" -> {
     "Tensor<mreal, LLU::Passing::Shared>", 
      "Tensor<mreal, LLU::Passing::Shared>"}, "outType" -> "Tensor", 
    "inName" -> {"in1", "in2"}, "outName" -> "res", 
    "inMember" -> {"integer", "integer"}, "outMember" -> "integer", 
    "inCoercion" -> {
     "(Tensor<mreal, LLU::Passing::Shared>)", 
      "(Tensor<mreal, LLU::Passing::Shared>)"}, "outCoercion" -> "(mint)"|>, <|
   "Name" -> "\"__test__\"", "Load" -> 
    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
    "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto a = \
mngr.getInteger(0);\n\tmngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn \
err;\n}", "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
    "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
    "inMember" -> {"integer"}, "outMember" -> "integer", 
    "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
  ExternalEvaluateLLU`Private`filename$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810040035.cpp", 
  ExternalEvaluateLLU`Private`lib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\20220810040035.dll", 
  ExternalEvaluateLLU`Private`path$$, ExternalEvaluateLLU`Private`a$$, 
  ExternalEvaluateLLU`Private`debuglib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040035.dll"}, 
  PanelBox[
   InterpretationBox[GridBox[{
      {
       StyleBox["\<\"Open source file\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810040035.\
cpp\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>If[
          FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
          ExternalEvaluate["Shell", 
           StringTemplate["code `1`"][
           ExternalEvaluateLLU`Private`filename$$]]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Build\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"20220810040035\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>ExternalEvaluateLLU`Private`build[
          Dynamic[ExternalEvaluateLLU`Private`filename$$], 
          Dynamic[ExternalEvaluateLLU`Private`libName$$]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Load/Unload\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       PanelBox[
        TagBox[GridBox[{
           {
            ButtonBox[
             StyleBox["\<\"Load Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Load Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Unload Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Unload Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
               "Unloaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   Slot["Load"]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"], 
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    Slot["Load"]]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[2.0999999999999996`]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Function[BoxForm`e$, 
          TableForm[BoxForm`e$]]]]},
      {
       StyleBox["\<\"Load Function(Release/Debug)\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       DynamicModuleBox[{ExternalEvaluateLLU`Private`debuglib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040035.dll", 
        ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\20220810040035.dll", 
        ExternalEvaluateLLU`Private`src$$ = 
        "D:\\ExternalEvaluate_LLU\\Source\\20220810040035.cpp", 
        ExternalEvaluateLLU`Private`functions$$ = {<|
         "Name" -> "\"test_llu\"", "Load" -> 
          "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]", 
          "Code" -> 
          "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in1 = mngr.getTensor<mreal, LLU::Passing::Shared>(0);\n\tauto \
in2 = mngr.getTensor<mreal, LLU::Passing::Shared>(1);\n\t\tLLU::Tensor<mreal> \
res (0, in1.dimensions());\n\t\tfor (mint i = 0; i < \
in1.getFlattenedLength(); i++)\n\t\t{\n\t\t\tres[i] = in1[i] + in2[i];\n\t\t}\
\n\tmngr.set(res);\n\treturn err;\n}", 
          "inType" -> {
           "Tensor<mreal, LLU::Passing::Shared>", 
            "Tensor<mreal, LLU::Passing::Shared>"}, "outType" -> "Tensor", 
          "inName" -> {"in1", "in2"}, "outName" -> "res", 
          "inMember" -> {"integer", "integer"}, "outMember" -> "integer", 
          "inCoercion" -> {
           "(Tensor<mreal, LLU::Passing::Shared>)", 
            "(Tensor<mreal, LLU::Passing::Shared>)"}, "outCoercion" -> 
          "(mint)"|>, <|
         "Name" -> "\"__test__\"", "Load" -> 
          "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
          "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
          "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
          "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
          "inMember" -> {"integer"}, "outMember" -> "integer", 
          "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
        ExternalEvaluateLLU`Private`libName$$ = "20220810040035", 
        ExternalEvaluateLLU`Private`load$$}, 
        PanelBox[
         TagBox[GridBox[{
            {
             StyleBox["\<\"Export Function\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             TagBox[GridBox[{
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["test_llu", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"], 
                    Appearance -> Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, \
_}]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]},
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["__test__", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"]},
            {
             StyleBox["\<\"Copy LibraryFunctionDeclaration\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             PanelBox[
              TagBox[
               TagBox[GridBox[{
                  {
                   ButtonBox[
                    StyleBox["\<\"Release\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                    ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810040035.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\20220810040035.dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]},
                  {
                   ButtonBox[
                    StyleBox["\<\"Debug\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                    ToExpression[
                    "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"],
                     "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810040035.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040035.\
dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]}
                 },
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                Column],
               Function[BoxForm`e$, 
                TableForm[BoxForm`e$]]]]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[2.0999999999999996`]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$]]]],
        DynamicModuleValues:>{}]},
      {
       StyleBox["\<\"File Operations\"\>",
        StripOnInput->False,
        FontWeight->Bold], GridBox[{
         {
          ButtonBox[
           StyleBox["\<\"Append to Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           ButtonFunction:>CellPrint[
             Cell[
             "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
              "ExternalLanguage", CellEvaluationLanguage -> "LLU"]],
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rewrite Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
              Cell[
              "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
               "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]),
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rollback Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
            WriteString[
             ExternalEvaluateLLU`Private`filename$$, 
              ExternalEvaluateLLU`Private`src0$$]; 
            Close[ExternalEvaluateLLU`Private`filename$$]),
           Evaluator->Automatic,
           Method->"Preemptive"]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.1]}, 
            Offset[0.2]}}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    TableForm[{{
       Style["Open source file", Bold], 
       Button[
        Style["D:\\ExternalEvaluate_LLU\\Source\\20220810040035.cpp", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        If[
         FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
         ExternalEvaluate["Shell", 
          StringTemplate["code `1`"][
          ExternalEvaluateLLU`Private`filename$$]]], Appearance -> Frameless, 
        Method -> "Queued"]}, {
       Style["Build", Bold], 
       Button[
        Style["20220810040035", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        ExternalEvaluateLLU`Private`build[
         Dynamic[ExternalEvaluateLLU`Private`filename$$], 
         Dynamic[ExternalEvaluateLLU`Private`libName$$]], Appearance -> 
        Frameless, Method -> "Queued"]}, {
       Style["Load/Unload", Bold], 
       Panel[
        TableForm[{{
           Button[
            Style["Load Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"], Method -> 
            "Queued"], 
           Button[
            Style["Load Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"], 
            Method -> "Queued"]}, {
           Button[
            Style["Unload Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"], 
            Method -> "Queued"], 
           Button[
            Style["Unload Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
             "Unloaded"], Method -> "Queued"]}, {
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 Slot["Load"]]}& ][ExternalEvaluateLLU`Private`functions$$]], 
             "LoadResult"]], 
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                  Slot["Load"]]]}& ][
              ExternalEvaluateLLU`Private`functions$$]], "LoadResult"]]}}]]}, {
       Style["Load Function(Release/Debug)", Bold], 
       DynamicModule[{
        ExternalEvaluateLLU`Private`debuglib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040035.dll", 
         ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\20220810040035.dll", 
         ExternalEvaluateLLU`Private`src$$ = 
         "D:\\ExternalEvaluate_LLU\\Source\\20220810040035.cpp", 
         ExternalEvaluateLLU`Private`functions$$ = {<|
           "Name" -> "\"test_llu\"", "Load" -> 
            "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]", 
            "Code" -> 
            "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in1 = mngr.getTensor<mreal, LLU::Passing::Shared>(0);\n\tauto \
in2 = mngr.getTensor<mreal, LLU::Passing::Shared>(1);\n\t\tLLU::Tensor<mreal> \
res (0, in1.dimensions());\n\t\tfor (mint i = 0; i < \
in1.getFlattenedLength(); i++)\n\t\t{\n\t\t\tres[i] = in1[i] + in2[i];\n\t\t}\
\n\tmngr.set(res);\n\treturn err;\n}", 
            "inType" -> {
             "Tensor<mreal, LLU::Passing::Shared>", 
              "Tensor<mreal, LLU::Passing::Shared>"}, "outType" -> "Tensor", 
            "inName" -> {"in1", "in2"}, "outName" -> "res", 
            "inMember" -> {"integer", "integer"}, "outMember" -> "integer", 
            "inCoercion" -> {
             "(Tensor<mreal, LLU::Passing::Shared>)", 
              "(Tensor<mreal, LLU::Passing::Shared>)"}, "outCoercion" -> 
            "(mint)"|>, <|
           "Name" -> "\"__test__\"", "Load" -> 
            "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
            "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
            "inType" -> {"Integer"}, "outType" -> "Boolean", 
            "inName" -> {"a"}, "outName" -> 
            "!LLU::LibraryData::uncheckedAPI()", "inMember" -> {"integer"}, 
            "outMember" -> "integer", "inCoercion" -> {"(Integer)"}, 
            "outCoercion" -> "(mint)"|>}, 
         ExternalEvaluateLLU`Private`libName$$ = "20220810040035", 
         ExternalEvaluateLLU`Private`load}, 
        Panel[
         TableForm[{{
            Style["Export Function", Bold], 
            Column[{
              OpenerView[{
                Button[
                 Style["test_llu", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"], 
                 Appearance -> Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, _}]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"test_llu\", \n\t{{_, _, \"Shared\"}, {_, _, \"Shared\"}}, \n\t{_, \
_}]"]]]}}]]}], 
              OpenerView[{
                Button[
                 Style["__test__", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}]}]}, {
            Style["Copy LibraryFunctionDeclaration", Bold], 
            Panel[
             TableForm[{
               Button[
                Style["Release", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  (Slot["Load"]& )[
                   First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                  ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810040035.cpp"], 
                  "D:\\ExternalEvaluate_LLU\\Library\\20220810040035.dll"], 
                Method -> "Queued"], 
               Button[
                Style["Debug", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                   (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                  ToExpression[
                  "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"], 
                  "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810040035.cpp"], 
                  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040035.\
dll"], Method -> "Queued"]}]]}}]], DynamicModuleValues :> {}]}, {
       Style["File Operations", Bold], {
        Button[
         Style["Append to Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10], 
         CellPrint[
          Cell[
          "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
           "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rewrite Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
           Cell[
           "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
            "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rollback Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
         WriteString[
          ExternalEvaluateLLU`Private`filename$$, 
           ExternalEvaluateLLU`Private`src0$$]; 
         Close[ExternalEvaluateLLU`Private`filename$$]]}}}]]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.8690358179520035`*^9, {3.8690359449938917`*^9, 3.8690359725990915`*^9}, {
   3.8690360444916058`*^9, 3.86903606447183*^9}, 3.86903610417859*^9, 
   3.8690363593181686`*^9, 3.8690367158485737`*^9, 3.8690367481445074`*^9, 
   3.8690371784564857`*^9, 3.869037226688116*^9, {3.869037304907748*^9, 
   3.8690373206479626`*^9}, 3.8690373860076046`*^9, 3.8690378153934207`*^9, 
   3.8690378612239714`*^9, 3.8690382265555735`*^9, {3.8690382644252987`*^9, 
   3.869038275334936*^9}, 3.869038667474334*^9, 3.8690387775472765`*^9, 
   3.8690388163802137`*^9, 3.8690390989611406`*^9, 3.8690391775575476`*^9, 
   3.8690640492063837`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"950a4a53-e13f-40e3-9ab4-ade3d12acb91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"LoadResult\"\>",
   "EchoLabel"], "  ", 
  TagBox[GridBox[{
     {"\<\"\\\"test_llu\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "\"Shared\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "\"Shared\""}], "}"}]}], 
                    "}"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810040035.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810040035.dll", "test_llu", {{
          Blank[], 
          Blank[], "Shared"}, {
          Blank[], 
          Blank[], "Shared"}}, {
         Blank[], 
         Blank[]}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {"\<\"\\\"__test__\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"True", "|", "False"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810040035.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810040035.dll", "__test__", {
        Integer}, 
        Alternatives[True, False]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]]}]], "Echo",
 CellChangeTimes->{
  3.8690640599957523`*^9},ExpressionUUID->"a1514fff-bc5b-4808-93c1-\
a81e225e2ff9"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"libData Initialization:\"\>",
   "EchoLabel"], "  ", "True"}]], "Echo",
 CellChangeTimes->{
  3.869064063749595*^9},ExpressionUUID->"1fe2ecf6-1311-4346-b983-\
1e778f4ea844"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load and test", "Subsection",
 CellChangeTimes->{{3.8690633924452906`*^9, 
  3.8690633940088043`*^9}},ExpressionUUID->"d3b230ec-d2a2-468d-bda8-\
f9e84daae647"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
LyKXUF1xFA9GEaWnoCVc7Es5ROswqTPY8lGU3gM2VxYTrX/15+E6zyiRxvPQ
am7rolG62hylitpfPWPMrW+6esf1uusCSMeqYX/lg1YtNpdLHr9HD/1BK+jh
oCtodSqVjKAFZDdg0LI8bjQChitnqduyPbiUN2c+e1QDmvyquS37W1iClvUR
56oM9sefriNB0NpeaYJW2c7Kc8sssc4e4r9tLe/FvtKgl3/u12tpKe6hpy/F
3SfjK1Wz+SoLWZUBSevvUv/0htKHvv1dpqz6fZd/rg9gtz2Sgpb/oLUMWl1L
JSNoAdn1N0ZrGRbcQUud4xr/pC9VswYtPVkt/9bi0Gpheai+82mgWigjTSpb
Xr/nZratEHq0kovPI8md0Nejw315bM/cEqXE8ps23dLsqg/mqg16e0LaBy1v
qYLIPUtqR5kRnJRiBAYta/4Uu+lKd933aNOZ5h6a1T5odT/OEoIWkN1gQcsx
wl1LVK16tMxHePYuqkv6LOVNHV1aRUPQsmzLsrv6U0s1o1kPAbZLl6AlP6GT
m1Ftlt6U1100dbow0lc5yxkwlgu0DVoNpWqp2tqqhLZoUe7meo8Cg5Ztfy0R
TitDlz1K0aPV73EmaAHZdQxaekjoGrTMfiL1deURoHVIVLugJXV31ZtJHrQK
Pd7RubW9eunR0p4NiVn+zqjVU8L58mFZGST0h02Jgla/w/XFXm+GM+UKWh33
KOCLkzFBq8fjTNACshssaIU+L6sTiOVbh/pIdevfq3e1dBSZpVaXtT90rBe3
Pjr0znUGLXsBsH36GqOljLwSGcMdDx6uIkr1UKwKXdoArYcpglZjqbws5ZFS
SstHh5aSOIOWL+d02qNSiqDVvVQyghaQ3WBBy9qnZc8Xjb+j5em0csw2vq1o
3dLly2oa0r8j2Ti4/5IrsylBy/2wEtunz8HwUlgyHwXKfVbVWPGqw6fsALlm
jjOPD1rlcC/pS3/y2Cd/qbzK7SijyNQ4oXfjaGFDHoE21791uNm+fX+NQfiH
s3r1Dnu02lT/QatzqWQELSC7AYNWYUQMT77wLqn/TINlW9YfbbCVWulBM0bo
15uJ/nkHZUFb0CJlbbXuP1iq/fCCkmpcQ3SWw7TkIVtaNNKG98i/ZmDONcf/
eMZ4+0rl3eWyz0r9+Qizgyto7vJR6X69jH9/pUPkmBu9R9oPlpo9iu7j3HwW
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
nP4/1oKEKA==
    "], {{0, 317.42751038423324`}, {481.8417596191669, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{481.8417596191669, 317.42751038423324`},
  PlotRange->{{0, 481.8417596191669}, {0, 317.42751038423324`}}]], "Input",Exp\
ressionUUID->"6d28438c-b23c-4747-bb3d-3b0086e0b92e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "5"}], "}"}]}], "]"}], "&"}], "@", 
     RowBox[{"Range", "@", "10"}]}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"in2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "5"}], "}"}]}], "]"}], "&"}], "@", 
     RowBox[{"Range", "@", "10"}]}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{"test$llu", "[", 
  RowBox[{"in1", ",", " ", "in2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"dec", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"LibraryFunctionDeclaration", "[", 
    RowBox[{
     RowBox[{"LL`test$fc", "\[Rule]", "\"\<test_fc\>\""}], ",", 
     "\"\<D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\>\"", 
     ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"TypeSpecifier", "[", "\"\<PackedArray\>\"", "]"}], "[", 
         RowBox[{"\"\<MachineReal\>\"", ",", "2"}], "]"}], ",", 
        RowBox[{
         RowBox[{"TypeSpecifier", "[", "\"\<PackedArray\>\"", "]"}], "[", 
         RowBox[{"\"\<MachineReal\>\"", ",", "2"}], "]"}]}], "}"}], "\[Rule]", 
      RowBox[{
       RowBox[{"TypeSpecifier", "[", "\"\<PackedArray\>\"", "]"}], "[", 
       RowBox[{"\"\<MachineReal\>\"", ",", "2"}], "]"}]}]}], "]"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"test$fc", " ", "=", " ", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{"dec", ",", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Typed", "[", 
        RowBox[{"in1", ",", " ", 
         RowBox[{
          RowBox[{"TypeSpecifier", "[", "\"\<PackedArray\>\"", "]"}], "[", 
          RowBox[{"\"\<MachineReal\>\"", ",", "2"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"Typed", "[", 
        RowBox[{"in2", ",", " ", 
         RowBox[{
          RowBox[{"TypeSpecifier", "[", "\"\<PackedArray\>\"", "]"}], "[", 
          RowBox[{"\"\<MachineReal\>\"", ",", "2"}], "]"}]}], "]"}]}], "}"}], 
     "|->", "\n", "\t\t", 
     RowBox[{"LL`test$fc", "[", 
      RowBox[{"in1", ",", " ", "in2"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"test$fc", "[", 
  RowBox[{"in1", ",", " ", "in2"}], "]"}]}], "Code",
 CellChangeTimes->{{3.8690374082676163`*^9, 3.869037468262068*^9}, {
   3.869037518348879*^9, 3.8690375965654993`*^9}, {3.869038838597289*^9, 
   3.869038844478881*^9}, {3.869038886355294*^9, 3.869038890357066*^9}, {
   3.8690389967845078`*^9, 3.869038999526843*^9}, {3.8690391086752596`*^9, 
   3.8690391125350237`*^9}, 3.8690391921384573`*^9, 3.869064072077832*^9, {
   3.8690645249588404`*^9, 3.8690645298502607`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"e9a414dc-1e78-42f2-a94a-1ff3fdad95da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.`", ",", "4.`", ",", "6.`", ",", "8.`", ",", "10.`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"12.`", ",", "14.`", ",", "16.`", ",", "18.`", ",", "20.`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8690374694333067`*^9, 3.8690374958211*^9}, {
   3.86903753657097*^9, 3.869037551235385*^9}, 3.8690375971903176`*^9, 
   3.869038893256776*^9, 3.8690390002640047`*^9, 3.8690391287953143`*^9, 
   3.8690391972107363`*^9, 3.869064091838677*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"ed7f23b1-ef0e-4372-86a9-3d8bdf13b342"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"LibraryFunctionDeclaration", "[", 
   RowBox[{
    RowBox[{"LL`test$fc", "\[Rule]", "\<\"test_fc\"\>"}], 
    ",", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040035.dll\"\>\
", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"TypeSpecifier", "[", "\<\"PackedArray\"\>", "]"}], "[", 
        RowBox[{"\<\"MachineReal\"\>", ",", "2"}], "]"}], ",", 
       RowBox[{
        RowBox[{"TypeSpecifier", "[", "\<\"PackedArray\"\>", "]"}], "[", 
        RowBox[{"\<\"MachineReal\"\>", ",", "2"}], "]"}]}], "}"}], "\[Rule]", 
     RowBox[{
      RowBox[{"TypeSpecifier", "[", "\<\"PackedArray\"\>", "]"}], "[", 
      RowBox[{"\<\"MachineReal\"\>", ",", "2"}], "]"}]}]}], "]"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8690374694333067`*^9, 3.8690374958211*^9}, {
   3.86903753657097*^9, 3.869037551235385*^9}, 3.8690375971903176`*^9, 
   3.869038893256776*^9, 3.8690390002640047`*^9, 3.8690391287953143`*^9, 
   3.8690391972107363`*^9, 3.869064091838677*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"34227aa5-ac04-4bbb-8e21-37223f84db19"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.705078125, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"PackedArray\"", "::[", 
                    RowBox[{"\"Real64\"", ",", "2"}], "]"}], ",", 
                    RowBox[{"\"PackedArray\"", "::[", 
                    RowBox[{"\"Real64\"", ",", "2"}], "]"}]}], "}"}], 
                    "\[Rule]", 
                    RowBox[{"\"PackedArray\"", "::[", 
                    RowBox[{"\"Real64\"", ",", "2"}], "]"}]}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.705078125, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"PackedArray\"", "::[", 
                    RowBox[{"\"Real64\"", ",", "2"}], "]"}], ",", 
                    RowBox[{"\"PackedArray\"", "::[", 
                    RowBox[{"\"Real64\"", ",", "2"}], "]"}]}], "}"}], 
                    "\[Rule]", 
                    RowBox[{"\"PackedArray\"", "::[", 
                    RowBox[{"\"Real64\"", ",", "2"}], "]"}]}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
        "PackedArray"["Real64", 
         LiteralType[2, "Integer64"]], 
        "PackedArray"["Real64", 
         LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
        LiteralType[2, "Integer64"]]], "Input" -> Compile`Program[{
       LibraryFunctionDeclaration[
       LL`test$fc -> "test_fc", 
        "D:\\ExternalEvaluate_LLU\\Library\\20220810040035.dll", {
          TypeSpecifier["PackedArray"]["MachineReal", 2], 
          TypeSpecifier["PackedArray"]["MachineReal", 2]} -> 
        TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
      Function[{
        Typed[$CellContext`in1, 
         TypeSpecifier["PackedArray"]["MachineReal", 2]], 
        Typed[$CellContext`in2, 
         TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
       LL`test$fc[$CellContext`in1, $CellContext`in2]]], "ErrorFunction" -> 
    Automatic, "InitializationName" -> 
    "Initialization_16f73cb8_d8f0_4dc7_9b76_f648e2f08143", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Windows-x86-64", "VersionData" -> {13.1, 0, 0}, 
    "CompiledIR" -> <|"Windows-x86-64" -> ByteArray[CompressedData["
1:eJytWX1YE1e6P5OvCRjCBNEGCTgBsdEiDt9BsE1IxKjYBqQFV9skhKRQkxBD
BPzCCUGCFm201mZr6wZr+9TdbS9d0WprWwK0oqKL0nu1F6uwoLZbP7Daav2o
98wkQXH77B/73DxP5s155/34vb/znsPMQVxaWViKAAA8sQDkKtrPpUcCwIbj
Uh4xZf7iL4xr77ZpxhWQ+ZSNmAcAiwPAOIYYMOB4Ivyijvgt8m7WPA6WkrUV
aeAlsLlRsaxXS0nRHEbu1nG5w1hKpJQrXBCaYmtSWbvE8coIVzMm38oo6+Z+
HIkr8prwI0iKrUE4XTLdnbymdekW/HA3jLsBB2AulClx3SF4aR4QPzXFIxIn
wEvUk7z1u91aW9lSfMrL9QMTLnLbSRApZHjiATuuR4CXtS94K26+Z03FneOv
lzZxBW0SRus2XigLAJkU48o3ZNWTE42qKRHfCBGi02nFmwQA2SocFOAboya+
yl6cD/BmQWzIKc+AXBQPwHCykiGTYN2Rr3U6WnFBTDPAC45EkkyH3ft6VCyI
eK91y/tNEVO/xN/655+2AtD7ymaQO5/KX/ePVbs01rc2lE+dxmZt2z1tV8OR
Jz968s578Me0CeR238CuJ3w97fVfqYyciUCWFp8DylK/YnBwCfdlzkRSOSu+
PaIrVU6umarCrHg7N1wcNoEr+2oamO6uXzrf6k3Y80FIgRCAEshRdNPAA/hB
cV4GngumtDOKot1yEKFF/hzGv07dYfZyyGmgDtxDcGRtq0PCIMMzsEaQGN08
RDvKGB+Fhf5EW2pDSZZVJjRZt1LDyWARuAduM2UMiTc8Q3iU0oUDtMHHKQ0B
y5w+HpXLc5EO4g2jjd3k02dIKeIG42RodJML3NY6mfcpA+BhDKBABNYBlWyy
SbYLqEi2N0NYCBLBPoeHq/1WpgZuEzEdUZEGpuFxF5gU6UVBjMn70UNgJHMg
HIR4AZ/LhPAwIXjbx5l+l7qPEOz2cCAFv0E8oQMkAe5ome/6Y3YhA2j7ZBDR
C+EtBCe0TB+7PcqEf+oPW6EYZMtJk+RpMdcdxhJi7VEAzIM8R0CexzfKhFN5
Sl0+d3MIkiJWTeUeTZHLPCHKId7fWcjGqbyI1IXcxhBmQtF4xrJ6q258vSnX
u5C7PwTJlH//QYji0trxDIKKk7imnZl9m53tdWaQruXlztUqtAZ31RxwrSx3
VnvQ1UJX2PtqvrmXv8oabgbhNitq9aJVOLqKQG29nBEcrcHo37TSbwB/V8vQ
VVrU3sv5AV7poVnLrwXoKgy1kah5gF/rRZdrA47UXWLcchyt9d4kMbG4rFsV
gsniG478IFm6o7MmeqfxzQveMz0Tqnyyi5+Ivsl/7cK1X/vz0Rf7LD/dfRpt
MbVtly58zqE++ulnvI3fluBR+VMXHLx6OSZCy+rIhCXC1QYcyGU3L17QroW/
ufDLYJ4RJ5+Kq2XClQiHmLDdfTR+EqC3EgSDF8AUFm5AOAiCg+AH2swPjwjh
kojfCYB20Fj0LlYgA5QHg1ZxiN272IcZDO+oG0GK35CqhXRQktaQCG/PZfEp
EuABdADwtKoVERNZLHLUTQsUf95JSnEaLgICkPbNuYAgwSL8kNI2c+jBQ0h7
WhywBvTRdF/Hj2fiNEwQDHX9sGgbjBtCmXEDZudYsyAjkY+ScH/eNg5wJwZA
YFSB9W/M41MAIXhZAHx6kiAGILJHgW18KS4bMLwICKSFPDx/JKfWXzAerHH6
W3tuQh/Go/grxl9HHqPrpvHkY3Q9P+v1yQAZeDRjaE2cGjAGxmS84/ZJIHJk
dBLJLo6jgw3/cizGIUMgJdYjjBLku5tDps79mqX4QzNQa1lkRDxl+zFca+9A
mcolRV2DImMkMrtJIW3obM4l0ZW1aJVnOe8iCL+C8W+S/FRebmyHL+ZEi8hI
sGkzZ3QPc3a3YnYzc3ZPbbPdiq7moitVLqsVXWVlVte6rLgrqkfAv+zmDxLh
FiJ8aIQ/ouanYl0x58SiM+KYDl2skdiQfciZ3avIamPmHHLmNDCze0Yiq7Xo
6nI0s9xlg1fSZXW7rFq0WoJW32bDsDWkS8N1LRe6bB7XSo8j8eoI/+oA/+d2
/mWCWdrdIhpuEfXQ17M60VGxqMsRc1TH+R+3IqtbkeWhrwc6pdsU0iZm9rbO
mTDpvfrsb5jZrZ28wxUua4nLZnXay9FarcsudNm9rqgTi8KvgvCf1PxhN39I
Fj6I8y/DKnBJzFlfbIc89pRYdNYRe3ZANDwY808k1igskLYqZr3tzO5RTwkU
onXV1KK1noL8m+5wioHYV2KP6kTfi2PO+WLqkFgKsDhmRMcpWu+U9nRmtypm
Q0LudeQMK7Kb4LCz+atQWKmrBuLhoqskqM3jWDqE8S+38y+o+TeIeN8peezw
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
558uNc6nu0O1acerBVTRje9zRnn9Pcqv/GppQGDOQ88ucUM8x4eq34cNfOuT
1745+INkAvbd6muZJ8rWI/++hwR/738zSE365gcrzOsoe383/G6j/Nf5i8yw
BkzAO5m/ThmZm/rHCAj/+OmnbXz+SR7ssxWbbq37cMlOai7HdMaYCrqGDnwF
SRvMNs/MoyIveQ1OUt21XyChu8/fn5DmXx77Pn/wWQxNbrZlA1XpvY+ioxbB
bNcyr8b/bN5Iq85Fw+K3bO5vRMWbHqL6lurCE/0vRD4K9b9fdlP0f/bbDY6e
hmeewxQrWYq0vsmC9b35nzw/ZvjLjOBSXzu0bu0OrSwNy1USytT7ggLu8bbo
NyDllhuu0d65f7rtwzH+B8Qc5aPjQ9fH3P70+Jjhr2ESKtvHQ8/UYQEi3zm/
7ni0x89u4Wn4YpcMQDh8BljCSZd6ZnROwnu2t4TxjcdGONy9hian89uUHqTD
FPXCYPl+3l/JtCWcYulbM5iJ+PHt8ombjcdk41RM+t2KemZ6ElDPTAr6mYnS
soSIxBHnnRMGf6dxXiWOYVyfjO3lclt9TQjSgAtvy1NNMq9cBuI5bKxeq0UX
JZfKgJjL8fbyorFyDGtvRZZz5oCeCNYgfEWkHo6fJCPb4wTr6jRknJQ3lFan
zEetBDh1b6U5IeIUPp6RqOLkN/XZn1V45sUHDL64EXj/ozBOojHKE4Nv7RAj
ngvfg+dNeZPBbsHld+TSJt7WBY56tRuP53Agqt4P5ILhXWd0zDiMq33Tivtf
Ov1ZPzFL2FjUM+ZEeF1nTtoIVH3P6MJ1zIf5oh7Lp4SMSOD9+zim4Bx5TyaX
qNx1GBbvHC704pFTupscFDFpr6hZ9/G0+bQF/NND4iAMZbBH896i866j834Z
Fsy1n85VQOfi0s+sMFcT9czqzMU7uDIB9diaO20b8nEeje8mNScEnJOwaF6u
osGRjKokspYRE1GqpSbBPjLnRKKcKFVTg+qROVfS1eP6lipaZZFYt1XRS/oS
FXKWnyMZWqZ+fi/Ll981HZTKQtdmsQq+WdoxWIYtCdWWTY1DusjIOzYicbpz
mB+N+aj5VrHrtSS6TGY6TRyzCn2wbBIX9jqiTVpiAabegh9PkL3A+fg9kGeM
i5DxVC0zXZdupKiutiICHosoJYtwLqdWhrKiSB9xzI0H/X0xbmQS7JaiKd35
SkYTMu3mBfUbvjflNldYkxYn/8hNBxBKRBUVh8siTDKulwKTx6rXetHVI5wz
VgXB0RLHvIlITEgKrBymWdOLyufycqO7ETbLhkTDlkxmsYiz+AFE2JNCLOwV
dE5Aq2WIYylAYUAegvAyuTbA2cs7Mb5ZGBnBrXe8EHo0ker0m/JcsJd1rEku
duDC8vdaj0fkxCSrVnhRSCjbDjo5XbDjrU4tChEAti9gt0d73N/+YDb8PuHl
8julmyYL+sJEi5SCBx/2v/GTsote7cXWfMGce5nrGCokMeL6+V8FOLtV1bXu
2sv0knnw3Q7+4IIiK3o4sqDrtb43aeMDa0Pp4fnD9LC2jk8Pr/m7LNOy9KSM
K/Bhx2/OVYrTFlmSxy4xEaMQvKq8V2vWPmrWVzeOBjB0O50G8NqPU/sCmF+/
lnOLBvPMieiJj+58dozOe2v/vhzBdSrIeIvm2HgBvcH+QPfqctz/HpbCx+Ia
mF429+ROUrA9VCL+Czn+eKh/vRl4AByGMoK5jeAE9qAwhv/9LB/4D7FKAnsB
JWPgFwus1RyG//8IhVAqoPwAyrpH7oOAPfWJBf6zqKCkj3OnwHdA6owJPJSU
npsIwCxAH7WNSlo/xZ9HAB7KoL4I+Pe6oAzGKQX+87mgDNpXB/yrH4vjAv6a
gjIYhzrXovaIoAzafwh/TwAPZVDfQe074KEM6o8A/34alEH9EPDve0EZzHsP
+M81gjLI28zAqV1QBvVvUO/gcPwM8rAuIAVAjfj1QRm01wfs9MhYHuyBsf0x
/XrE/7cvKIN66miUqj8og/o9Af89j8X5FI7HgYcyqP8qgO+rR3BS+jMB/zOP
xfkBjqEYlUHeqA8HPJR0vYEzjEe/QT0P+P9PEJRBPfV5ESqPA3qNGCmfap0t
NTMZXtOk0gpLhb1CZ6pYpbNXVFqUlRbDQl2FxWSqNieZKowGe4XZkFRl19ns
SVaiQlqcr6ky2F8xWxcZ7PNXQGHX6Zdp1CuqymkPQ63VoLcnVSTryw36ZfLS
Spu9WGfXlxeV2ypr8mwGw8JnV5gNtgo9fVoxNonBUkanGBu50mqnfAOnXXNq
9QYrhdNuqLJrjPrCFRbKV6OwGXR2w7/ENhvMeutKOqr/UpGRNm9MvZrkDGNm
qr5UqimTGglNWpk+U5NVmpmhMWakSQ0pRkKanJZKEaJRzLNUV+ppJ3pcbNNZ
rQabRqEzmWjFnFqr7aHNs4YaTfBobo7NVmmDtI2iX2RfaTIUwRLmGuyahUUG
S1WlTU/xNGqh0lnKoKe/roAFlYDm0D982WB/SLDfHqrm2A02i84UsBmdFBtk
yWLXmZIslbB2XVVSlb7SakgqM+hNyalJRFIyXlamS5WWpupSszKkhvRUvaE0
sywtRUqkZ2Xq9Ol6aZk+gzBmlOlqpRmajLQZVv2MGv/J4gxzVbW+eOHoOeR/
dAqZVGNKyv8XXvGZc0rUzxUWzaLujA7+gxkcE+jRqRx7Y+wU+tfO/wEe+P4O

        "]]|>, 
    "ExternalLibraryPaths" -> {
     "D:\\ExternalEvaluate_LLU\\Library\\20220810040035.dll"}, "orcInstance" -> 
    1008034208, "orcModuleId" -> 1008028256, "targetMachineId" -> 
    1007180416|>, 41354048, 41353840, 41353952, 41353216, 
   "{\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8690374694333067`*^9, 3.8690374958211*^9}, {
   3.86903753657097*^9, 3.869037551235385*^9}, 3.8690375971903176`*^9, 
   3.869038893256776*^9, 3.8690390002640047`*^9, 3.8690391287953143`*^9, 
   3.8690391972107363`*^9, 3.869064097074997*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"1c8e4641-2494-4daf-bed6-73d5afdf4b40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.`", ",", "4.`", ",", "6.`", ",", "8.`", ",", "10.`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"12.`", ",", "14.`", ",", "16.`", ",", "18.`", ",", "20.`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8690374694333067`*^9, 3.8690374958211*^9}, {
   3.86903753657097*^9, 3.869037551235385*^9}, 3.8690375971903176`*^9, 
   3.869038893256776*^9, 3.8690390002640047`*^9, 3.8690391287953143`*^9, 
   3.8690391972107363`*^9, 3.869064097110249*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"40b2cf23-197e-4842-9f23-2802712b131f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["C++ Source Code", "Subsection",
 CellChangeTimes->{{3.8690633997142315`*^9, 
  3.8690634047495003`*^9}},ExpressionUUID->"e64ef22c-97ff-44fe-b5fd-\
0aaccc4f0a27"],

Cell["\<\
#include \"LLU.h\"
EXTERN_C DLLEXPORT MTensor test_fc(MTensor in1, MTensor in2)
{
\tauto in_data1 = (mreal*)in1->data;
\tauto in_data2 = (mreal*)in2->data;
\tLLU::MArrayDimensions dims (in1->dims, in1->rank);
\tLLU::Tensor<mreal> res (0, dims);
\tfor (mint i = 0; i < in1->nelems; i++)
\t{
\t\tres[i] = in_data1[i] + in_data2[i];
\t}
\treturn res.abandonContainer();
}

EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto in1 = mngr.getTensor<mreal, LLU::Passing::Shared>(0);
\tauto in2 = mngr.getTensor<mreal, LLU::Passing::Shared>(1);
\t\tLLU::Tensor<mreal> res (0, in1.dimensions());
\t\tfor (mint i = 0; i < in1.getFlattenedLength(); i++)
\t\t{
\t\t\tres[i] = in1[i] + in2[i];
\t\t}
\tmngr.set(res);
\treturn err;
}
EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto a = mngr.getInteger(0);
\tmngr.set(!LLU::LibraryData::uncheckedAPI());
\treturn err;
}\
\>", "Program",
 CellChangeTimes->{{3.8690638320992856`*^9, 3.869063862737584*^9}, 
   3.869064115671424*^9},ExpressionUUID->"24eb74e4-1ee0-44e9-abcb-\
dabcd9adcfa8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. Boolean", "Section",
 CellChangeTimes->{{3.8690628848951693`*^9, 
  3.869062888132501*^9}},ExpressionUUID->"307ef09f-a722-49f8-9c07-\
bcf1a7f8df3c"],

Cell[CellGroupData[{

Cell["External Language Cell", "Subsection",
 CellChangeTimes->{{3.869063408379072*^9, 
  3.8690634090835376`*^9}},ExpressionUUID->"031a0aca-c2f5-4812-83d2-\
afd4055f4e59"],

Cell[CellGroupData[{

Cell["\<\
EXTERN_C DLLEXPORT bool test_fc(bool in)
{
\treturn in;
}
<||>
Boolean test_llu(Boolean in)
{
\tReturn in;
}\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"LLU",
 CellChangeTimes->{{3.869062889831789*^9, 3.869062946667265*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"da4dc477-1662-43ac-a217-2a801f872b91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Source File:\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810040201.cpp\"\>"}]\
], "Echo",
 CellChangeTimes->{
  3.869064121323504*^9},ExpressionUUID->"4ceca108-a1d9-461d-b9c3-\
d5f5ca61fe20"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Compiling\"\>",
   "EchoLabel"], "  ", "\<\"20220810040201\"\>"}]], "Echo",
 CellChangeTimes->{
  3.8690641215422*^9},ExpressionUUID->"b3e6ac9b-a21b-4082-9afe-83732d5d1da1"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Done\"\>",
   "EchoLabel"], 
  "  ", "\<\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\"\>"}\
]], "Echo",
 CellChangeTimes->{
  3.8690641321117783`*^9},ExpressionUUID->"05c83e1c-65ef-4a38-8c63-\
d4f6342f495a"]
}, Open  ]],

Cell[BoxData[
 DynamicModuleBox[{ExternalEvaluateLLU`Private`stream$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810040201.cpp", 
  ExternalEvaluateLLU`Private`src0$$ = "", 
  ExternalEvaluateLLU`Private`input$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT bool test_fc(bool in)\n{\n\treturn \
in;\n}\n<||>\nBoolean test_llu(Boolean in)\n{\n\tReturn in;\n}\n<||>\nBoolean \
__test__(Integer a)\n{\n\tReturn !LLU::LibraryData::uncheckedAPI();\n}", 
  ExternalEvaluateLLU`Private`libName$$ = "20220810040201", 
  ExternalEvaluateLLU`Private`src$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT bool test_fc(bool in)\n{\n\treturn \
in;\n}\n\nEXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in = mngr.getBoolean(0);\n\tmngr.set(in);\n\treturn err;\n}\n\
EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto a = \
mngr.getInteger(0);\n\tmngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn \
err;\n}", ExternalEvaluateLLU`Private`head$$ = 
  "#include \"LLU.h\"\nEXTERN_C DLLEXPORT bool test_fc(bool in)\n{\n\treturn \
in;\n}\n", 
  ExternalEvaluateLLU`Private`functions$$ = {<|
   "Name" -> "\"test_llu\"", "Load" -> 
    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]", "Code" -> 
    "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto in = \
mngr.getBoolean(0);\n\tmngr.set(in);\n\treturn err;\n}", 
    "inType" -> {"Boolean"}, "outType" -> "Boolean", "inName" -> {"in"}, 
    "outName" -> "in", "inMember" -> {"integer"}, "outMember" -> "integer", 
    "inCoercion" -> {"(Boolean)"}, "outCoercion" -> "(mint)"|>, <|
   "Name" -> "\"__test__\"", "Load" -> 
    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
    "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, \n\
MArgument *Args, MArgument Res){\n\tauto err = LLU::ErrorCode::NoError;\n\t\
LLU::MArgumentManager mngr {libData, Argc, Args, Res};\n\tauto a = \
mngr.getInteger(0);\n\tmngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn \
err;\n}", "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
    "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
    "inMember" -> {"integer"}, "outMember" -> "integer", 
    "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
  ExternalEvaluateLLU`Private`filename$$ = 
  "D:\\ExternalEvaluate_LLU\\Source\\20220810040201.cpp", 
  ExternalEvaluateLLU`Private`lib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\20220810040201.dll", 
  ExternalEvaluateLLU`Private`path$$, ExternalEvaluateLLU`Private`a$$, 
  ExternalEvaluateLLU`Private`debuglib$$ = 
  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040201.dll"}, 
  PanelBox[
   InterpretationBox[GridBox[{
      {
       StyleBox["\<\"Open source file\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"D:\\\\ExternalEvaluate_LLU\\\\Source\\\\20220810040201.\
cpp\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>If[
          FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
          ExternalEvaluate["Shell", 
           StringTemplate["code `1`"][
           ExternalEvaluateLLU`Private`filename$$]]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Build\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       ButtonBox[
        StyleBox["\<\"20220810040201\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0.25, 0.48, 1],
         FrontFaceColor->RGBColor[0.25, 0.48, 1],
         BackFaceColor->RGBColor[0.25, 0.48, 1],
         GraphicsColor->RGBColor[0.25, 0.48, 1],
         FontFamily->"Courier",
         FontSize->10,
         FontVariations->{"Underline"->True},
         FontColor->RGBColor[0.25, 0.48, 1]],
        Appearance->Frameless,
        ButtonFunction:>ExternalEvaluateLLU`Private`build[
          Dynamic[ExternalEvaluateLLU`Private`filename$$], 
          Dynamic[ExternalEvaluateLLU`Private`libName$$]],
        Evaluator->Automatic,
        Method->"Queued"]},
      {
       StyleBox["\<\"Load/Unload\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       PanelBox[
        TagBox[GridBox[{
           {
            ButtonBox[
             StyleBox["\<\"Load Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Load Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Unload Library(Release)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"],
             Evaluator->Automatic,
             Method->"Queued"], 
            ButtonBox[
             StyleBox["\<\"Unload Library(Debug)\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
               "Unloaded"],
             Evaluator->Automatic,
             Method->"Queued"]},
           {
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   Slot["Load"]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"], 
            ButtonBox[
             StyleBox["\<\"Load All Functions\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0.25, 0.48, 1],
              FrontFaceColor->RGBColor[0.25, 0.48, 1],
              BackFaceColor->RGBColor[0.25, 0.48, 1],
              GraphicsColor->RGBColor[0.25, 0.48, 1],
              FontFamily->"Courier",
              FontSize->10,
              FontColor->RGBColor[0.25, 0.48, 1]],
             Appearance->Automatic,
             ButtonFunction:>Echo[
               TableForm[
                Map[{
                  Slot["Name"], 
                  ToExpression[
                   StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    Slot["Load"]]]}& ][
                ExternalEvaluateLLU`Private`functions$$]], "LoadResult"],
             Evaluator->Automatic,
             Method->"Preemptive"]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[2.0999999999999996`]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Function[BoxForm`e$, 
          TableForm[BoxForm`e$]]]]},
      {
       StyleBox["\<\"Load Function(Release/Debug)\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       DynamicModuleBox[{ExternalEvaluateLLU`Private`debuglib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040201.dll", 
        ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
        "D:\\ExternalEvaluate_LLU\\Library\\20220810040201.dll", 
        ExternalEvaluateLLU`Private`src$$ = 
        "D:\\ExternalEvaluate_LLU\\Source\\20220810040201.cpp", 
        ExternalEvaluateLLU`Private`functions$$ = {<|
         "Name" -> "\"test_llu\"", "Load" -> 
          "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]", "Code" -> 
          "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in = mngr.getBoolean(0);\n\tmngr.set(in);\n\treturn err;\n}", 
          "inType" -> {"Boolean"}, "outType" -> "Boolean", "inName" -> {"in"},
           "outName" -> "in", "inMember" -> {"integer"}, "outMember" -> 
          "integer", "inCoercion" -> {"(Boolean)"}, "outCoercion" -> 
          "(mint)"|>, <|
         "Name" -> "\"__test__\"", "Load" -> 
          "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
          "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
          "inType" -> {"Integer"}, "outType" -> "Boolean", "inName" -> {"a"}, 
          "outName" -> "!LLU::LibraryData::uncheckedAPI()", 
          "inMember" -> {"integer"}, "outMember" -> "integer", 
          "inCoercion" -> {"(Integer)"}, "outCoercion" -> "(mint)"|>}, 
        ExternalEvaluateLLU`Private`libName$$ = "20220810040201", 
        ExternalEvaluateLLU`Private`load$$}, 
        PanelBox[
         TagBox[GridBox[{
            {
             StyleBox["\<\"Export Function\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             TagBox[GridBox[{
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"test_llu\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["test_llu", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]},
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    ButtonBox[
                    StyleBox["\<\"__test__\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontVariations->{"Underline"->True},
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Frameless,
                    
                    ButtonFunction:>ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {"", 
                    PaneBox[
                    PanelBox[
                    TagBox[GridBox[{
                    {
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Load LibraryFunction(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>(
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null),
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Release)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    
                    ButtonFunction:>CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"],
                    Evaluator->Automatic,
                    Method->"Preemptive"], 
                    ButtonBox[
                    StyleBox["\<\"Copy Load Input(Debug)\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[2.0999999999999996`]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$]]]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Button[
                    Style["__test__", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10, Underlined], 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                    Panel[
                    TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load$$ = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load$$, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"]},
            {
             StyleBox["\<\"Copy LibraryFunctionDeclaration\"\>",
              StripOnInput->False,
              FontWeight->Bold], 
             PanelBox[
              TagBox[
               TagBox[GridBox[{
                  {
                   ButtonBox[
                    StyleBox["\<\"Release\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                    ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810040201.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\20220810040201.dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]},
                  {
                   ButtonBox[
                    StyleBox["\<\"Debug\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[0.25, 0.48, 1],
                    FrontFaceColor->RGBColor[0.25, 0.48, 1],
                    BackFaceColor->RGBColor[0.25, 0.48, 1],
                    GraphicsColor->RGBColor[0.25, 0.48, 1],
                    FontFamily->"Courier",
                    FontSize->10,
                    FontColor->RGBColor[0.25, 0.48, 1]],
                    Appearance->Automatic,
                    ButtonFunction:>(ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                    (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                    ToExpression[
                    "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"],
                     "libData Initialization:"]; 
                    ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                    File[
                    "D:\\ExternalEvaluate_LLU\\Source\\20220810040201.cpp"], 
                    "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040201.\
dll"]),
                    Evaluator->Automatic,
                    Method->"Queued"]}
                 },
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
                Column],
               Function[BoxForm`e$, 
                TableForm[BoxForm`e$]]]]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[2.0999999999999996`]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$]]]],
        DynamicModuleValues:>{}]},
      {
       StyleBox["\<\"File Operations\"\>",
        StripOnInput->False,
        FontWeight->Bold], GridBox[{
         {
          ButtonBox[
           StyleBox["\<\"Append to Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           ButtonFunction:>CellPrint[
             Cell[
             "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
              "ExternalLanguage", CellEvaluationLanguage -> "LLU"]],
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rewrite Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
              Cell[
              "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
               "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]),
           Evaluator->Automatic,
           Method->"Preemptive"]},
         {
          ButtonBox[
           StyleBox["\<\"Rollback Source File\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.25, 0.48, 1],
            FrontFaceColor->RGBColor[0.25, 0.48, 1],
            BackFaceColor->RGBColor[0.25, 0.48, 1],
            GraphicsColor->RGBColor[0.25, 0.48, 1],
            FontFamily->"Courier",
            FontSize->10,
            FontColor->RGBColor[0.25, 0.48, 1]],
           Appearance->Automatic,
           
           ButtonFunction:>(
            DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
            WriteString[
             ExternalEvaluateLLU`Private`filename$$, 
              ExternalEvaluateLLU`Private`src0$$]; 
            Close[ExternalEvaluateLLU`Private`filename$$]),
           Evaluator->Automatic,
           Method->"Preemptive"]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.1]}, 
            Offset[0.2]}}]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    TableForm[{{
       Style["Open source file", Bold], 
       Button[
        Style["D:\\ExternalEvaluate_LLU\\Source\\20220810040201.cpp", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        If[
         FileExistsQ[ExternalEvaluateLLU`Private`filename$$], 
         ExternalEvaluate["Shell", 
          StringTemplate["code `1`"][
          ExternalEvaluateLLU`Private`filename$$]]], Appearance -> Frameless, 
        Method -> "Queued"]}, {
       Style["Build", Bold], 
       Button[
        Style["20220810040201", 
         RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10, 
         Underlined], 
        ExternalEvaluateLLU`Private`build[
         Dynamic[ExternalEvaluateLLU`Private`filename$$], 
         Dynamic[ExternalEvaluateLLU`Private`libName$$]], Appearance -> 
        Frameless, Method -> "Queued"]}, {
       Style["Load/Unload", Bold], 
       Panel[
        TableForm[{{
           Button[
            Style["Load Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`lib$$], "Load"], Method -> 
            "Queued"], 
           Button[
            Style["Load Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryLoad[ExternalEvaluateLLU`Private`debuglib$$], "Loaded"], 
            Method -> "Queued"]}, {
           Button[
            Style["Unload Library(Release)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`lib$$], "Unload"], 
            Method -> "Queued"], 
           Button[
            Style["Unload Library(Debug)", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             LibraryUnload[ExternalEvaluateLLU`Private`debuglib$$], 
             "Unloaded"], Method -> "Queued"]}, {
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 Slot["Load"]]}& ][ExternalEvaluateLLU`Private`functions$$]], 
             "LoadResult"]], 
           Button[
            Style["Load All Functions", 
             RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
             10], 
            Echo[
             TableForm[
              Map[{
                Slot["Name"], 
                ToExpression[
                 StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                  Slot["Load"]]]}& ][
              ExternalEvaluateLLU`Private`functions$$]], "LoadResult"]]}}]]}, {
       Style["Load Function(Release/Debug)", Bold], 
       DynamicModule[{
        ExternalEvaluateLLU`Private`debuglib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040201.dll", 
         ExternalEvaluateLLU`Private`a$$, ExternalEvaluateLLU`Private`lib$$ = 
         "D:\\ExternalEvaluate_LLU\\Library\\20220810040201.dll", 
         ExternalEvaluateLLU`Private`src$$ = 
         "D:\\ExternalEvaluate_LLU\\Source\\20220810040201.cpp", 
         ExternalEvaluateLLU`Private`functions$$ = {<|
           "Name" -> "\"test_llu\"", "Load" -> 
            "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]", "Code" -> 
            "EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto in = mngr.getBoolean(0);\n\tmngr.set(in);\n\treturn err;\n}", 
            "inType" -> {"Boolean"}, "outType" -> "Boolean", 
            "inName" -> {"in"}, "outName" -> "in", "inMember" -> {"integer"}, 
            "outMember" -> "integer", "inCoercion" -> {"(Boolean)"}, 
            "outCoercion" -> "(mint)"|>, <|
           "Name" -> "\"__test__\"", "Load" -> 
            "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]", "Code" -> 
            "EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint \
Argc, \nMArgument *Args, MArgument Res){\n\tauto err = \
LLU::ErrorCode::NoError;\n\tLLU::MArgumentManager mngr {libData, Argc, Args, \
Res};\n\tauto a = mngr.getInteger(0);\n\t\
mngr.set(!LLU::LibraryData::uncheckedAPI());\n\treturn err;\n}", 
            "inType" -> {"Integer"}, "outType" -> "Boolean", 
            "inName" -> {"a"}, "outName" -> 
            "!LLU::LibraryData::uncheckedAPI()", "inMember" -> {"integer"}, 
            "outMember" -> "integer", "inCoercion" -> {"(Integer)"}, 
            "outCoercion" -> "(mint)"|>}, 
         ExternalEvaluateLLU`Private`libName$$ = "20220810040201", 
         ExternalEvaluateLLU`Private`load}, 
        Panel[
         TableForm[{{
            Style["Export Function", Bold], 
            Column[{
              OpenerView[{
                Button[
                 Style["test_llu", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"test_llu\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[test$llu]\n(*LoadFunction*)\n test$llu = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"test_llu\", \n\t{\"Boolean\"}, \n\t\"Boolean\"]"]]]}}]]}], 
              OpenerView[{
                Button[
                 Style["__test__", 
                  RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                  FontSize -> 10, Underlined], 
                 ToExpression[
                 "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"], Appearance -> Frameless], 
                Panel[
                 TableForm[{{
                    Button[
                    Style["Load LibraryFunction(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = 
                    ToExpression[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null], 
                    Button[
                    Style["Load LibraryFunction(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    ExternalEvaluateLLU`Private`load = ToExpression[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]; 
                    Echo[ExternalEvaluateLLU`Private`load, 
                    StringTemplate["Function `1` Loaded:"]["\"__test__\""]]; 
                    Null]}, {
                    Button[
                    Style["Copy Load Input(Release)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]], 
                    Button[
                    Style["Copy Load Input(Debug)", 
                    RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", 
                    FontSize -> 10], 
                    CopyToClipboard[
                    StringReplace["\\Library\\" -> "\\Library\\\\Debug\\"][
                    "ClearAll[$$test$$]\n(*LoadFunction*)\n $$test$$ = \n \
LibraryFunctionLoad[\n\t\
\"D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\", \n\t\
\"__test__\", \n\t{Integer}, \n\t\"Boolean\"]"]]]}}]]}]}]}, {
            Style["Copy LibraryFunctionDeclaration", Bold], 
            Panel[
             TableForm[{
               Button[
                Style["Release", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  (Slot["Load"]& )[
                   First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]; Echo[
                  ToExpression["!$$test$$[1]"], "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810040201.cpp"], 
                  "D:\\ExternalEvaluate_LLU\\Library\\20220810040201.dll"], 
                Method -> "Queued"], 
               Button[
                Style["Debug", 
                 RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 
                 10], ToExpression[
                  StringReplace["\\Library\\" -> "\\Library\\Debug\\"][
                   (Slot["Load"]& )[
                    First[
                    Select[Slot["Name"] == "\"__test__\""& ][
                    ExternalEvaluateLLU`Private`functions$$]]]]]; Echo[
                  ToExpression[
                  "$$" <> ExternalEvaluateLLU`Private`libName$$ <> "$$[1]"], 
                  "libData Initialization:"]; 
                ExternalEvaluateLLU`Private`GetLibraryFunctionDeclarations[
                  File[
                  "D:\\ExternalEvaluate_LLU\\Source\\20220810040201.cpp"], 
                  "D:\\ExternalEvaluate_LLU\\Library\\Debug\\20220810040201.\
dll"], Method -> "Queued"]}]]}}]], DynamicModuleValues :> {}]}, {
       Style["File Operations", Bold], {
        Button[
         Style["Append to Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10], 
         CellPrint[
          Cell[
          "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
           "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rewrite Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; CellPrint[
           Cell[
           "`" <> ExternalEvaluateLLU`Private`libName$$ <> "`", 
            "ExternalLanguage", CellEvaluationLanguage -> "LLU"]]], 
        Button[
         Style["Rollback Source File", 
          RGBColor[0.25, 0.48, 1], "FontFamily" -> "Courier", FontSize -> 10],
          DeleteFile[ExternalEvaluateLLU`Private`filename$$]; 
         WriteString[
          ExternalEvaluateLLU`Private`filename$$, 
           ExternalEvaluateLLU`Private`src0$$]; 
         Close[ExternalEvaluateLLU`Private`filename$$]]}}}]]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.869062964304922*^9, 3.8690641322211275`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"e2d7c736-6881-4288-a778-1fb8c97e5422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"LoadResult\"\>",
   "EchoLabel"], "  ", 
  TagBox[GridBox[{
     {"\<\"\\\"test_llu\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"test_llu\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{"True", "|", "False"}], "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"True", "|", "False"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810040201.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810040201.dll", "test_llu", {
         Alternatives[True, False]}, 
        Alternatives[True, False]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]},
     {"\<\"\\\"__test__\\\"\"\>", 
      InterpretationBox[
       RowBox[{
        TagBox["LibraryFunction",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   Thickness[0.038461538461538464`], {
                    FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.5, 0.5, 0.5], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
                  AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"__test__\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", "Integer", "}"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"True", "|", "False"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"20220810040201.dll\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       LibraryFunction[
       "D:\\ExternalEvaluate_LLU\\Library\\20220810040201.dll", "__test__", {
        Integer}, 
        Alternatives[True, False]],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]]}]], "Echo",
 CellChangeTimes->{
  3.8690641512793403`*^9},ExpressionUUID->"b5715ef9-2b63-417a-bfa1-\
492d4d122a7d"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"libData Initialization:\"\>",
   "EchoLabel"], "  ", "True"}]], "Echo",
 CellChangeTimes->{
  3.86906415445192*^9},ExpressionUUID->"49de9731-9c13-469d-876b-bf74a5453187"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test and Load", "Subsection",
 CellChangeTimes->{{3.8690641364292765`*^9, 
  3.869064140181591*^9}},ExpressionUUID->"efb74ea5-0cb5-49d8-86e9-\
21c02490596c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
LyKXUF1xFA9GEaWnoCVc7Es5ROswqTPY8lGU3gM2VxYTrX/15+E6zyiRxvPQ
am7rolG62hylitpfPWPMrW+6esf1uusCSMeqYX/lg1YtNpdLHr9HD/1BK+jh
oCtodSqVjKAFZDdg0LI8bjQChitnqduyPbiUN2c+e1QDmvyquS37W1iClvUR
56oM9sefriNB0NpeaYJW2c7Kc8sssc4e4r9tLe/FvtKgl3/u12tpKe6hpy/F
3SfjK1Wz+SoLWZUBSevvUv/0htKHvv1dpqz6fZd/rg9gtz2Sgpb/oLUMWl1L
JSNoAdn1N0ZrGRbcQUud4xr/pC9VswYtPVkt/9bi0Gpheai+82mgWigjTSpb
Xr/nZratEHq0kovPI8md0Nejw315bM/cEqXE8ps23dLsqg/mqg16e0LaBy1v
qYLIPUtqR5kRnJRiBAYta/4Uu+lKd933aNOZ5h6a1T5odT/OEoIWkN1gQcsx
wl1LVK16tMxHePYuqkv6LOVNHV1aRUPQsmzLsrv6U0s1o1kPAbZLl6AlP6GT
m1Ftlt6U1100dbow0lc5yxkwlgu0DVoNpWqp2tqqhLZoUe7meo8Cg5Ztfy0R
TitDlz1K0aPV73EmaAHZdQxaekjoGrTMfiL1deURoHVIVLugJXV31ZtJHrQK
Pd7RubW9eunR0p4NiVn+zqjVU8L58mFZGST0h02Jgla/w/XFXm+GM+UKWh33
KOCLkzFBq8fjTNACshssaIU+L6sTiOVbh/pIdevfq3e1dBSZpVaXtT90rBe3
Pjr0znUGLXsBsH36GqOljLwSGcMdDx6uIkr1UKwKXdoArYcpglZjqbws5ZFS
SstHh5aSOIOWL+d02qNSiqDVvVQyghaQ3WBBy9qnZc8Xjb+j5em0csw2vq1o
3dLly2oa0r8j2Ti4/5IrsylBy/2wEtunz8HwUlgyHwXKfVbVWPGqw6fsALlm
jjOPD1rlcC/pS3/y2Cd/qbzK7SijyNQ4oXfjaGFDHoE21791uNm+fX+NQfiH
s3r1Dnu02lT/QatzqWQELSC7AYNWYUQMT77wLqn/TINlW9YfbbCVWulBM0bo
15uJ/nkHZUFb0CJlbbXuP1iq/fCCkmpcQ3SWw7TkIVtaNNKG98i/ZmDONcf/
eMZ4+0rl3eWyz0r9+Qizgyto7vJR6X69jH9/pUPkmBu9R9oPlpo9iu7j3HwW
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
nP4/1oKEKA==
    "], {{0, 317.42751038423324`}, {481.8417596191669, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{481.8417596191669, 317.42751038423324`},
  PlotRange->{{0, 481.8417596191669}, {0, 317.42751038423324`}}]], "Input",Exp\
ressionUUID->"c21e6f5f-08bf-492e-94b7-c54ac10a81c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"test$llu", "[", "True", "]"}], "\n", 
 RowBox[{
  RowBox[{"dec", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"LibraryFunctionDeclaration", "[", 
     RowBox[{
      RowBox[{"LL`test$fc", "\[Rule]", "\"\<test_fc\>\""}], ",", 
      "\"\<D:\\\\ExternalEvaluate_LLU\\\\Library\\\\20220810040201.dll\>\"", 
      ",", 
      RowBox[{
       RowBox[{"{", "\"\<Boolean\>\"", "}"}], "\[Rule]", 
       "\"\<Boolean\>\""}]}], "]"}], "}"}]}], ";"}], "\n", 
 RowBox[{"test$fc", " ", "=", " ", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{"dec", ",", " ", 
    RowBox[{
     RowBox[{"Typed", "[", 
      RowBox[{"x", ",", " ", "\"\<Boolean\>\""}], "]"}], "|->", 
     RowBox[{"LL`test$fc", "@", "x"}]}]}], "]"}]}], "\n", 
 RowBox[{"test$fc", "[", "True", "]"}]}], "Code",
 CellChangeTimes->{{3.869064158468568*^9, 3.8690642256289196`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"dd19947a-8ff5-48a9-a099-6c69bb8e5dc1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8690642282533484`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"0dbbd811-7f27-4db2-87c3-17efca1f1dca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.705078125, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"Boolean\"", "}"}], "\[Rule]", 
                    "\"Boolean\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.705078125, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"Boolean\"", "}"}], "\[Rule]", 
                    "\"Boolean\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"Boolean"} -> "Boolean"], "Input" -> 
    Compile`Program[{
       LibraryFunctionDeclaration[
       LL`test$fc -> "test_fc", 
        "D:\\ExternalEvaluate_LLU\\Library\\20220810040201.dll", {"Boolean"} -> 
        "Boolean"]}, 
      Function[
       Typed[$CellContext`x, "Boolean"], 
       LL`test$fc[$CellContext`x]]], "ErrorFunction" -> Automatic, 
    "InitializationName" -> 
    "Initialization_34f569e9_868c_450c_b78e_779cbbf8f00a", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Windows-x86-64", "VersionData" -> {13.1, 0, 0}, 
    "CompiledIR" -> <|"Windows-x86-64" -> ByteArray[CompressedData["
1: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
u3BvvOla+R+mddLW
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "D:\\ExternalEvaluate_LLU\\Library\\20220810040201.dll"}, "orcInstance" -> 
    1007937808, "orcModuleId" -> 1013337776, "targetMachineId" -> 
    1013327552|>, 69861632, 69861392, 69861536, 69861376, 
   "{\"Boolean\"} -> \"Boolean\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8690642288804913`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f68a71ec-a699-46f9-b826-3bb21528062f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8690642288961143`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"7e55ba0c-36b2-4a0c-b9fe-e3461b5f52e8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["C++ Source Code", "Subsection",
 CellChangeTimes->{{3.869064578986185*^9, 
  3.869064582519371*^9}},ExpressionUUID->"92efd4a8-a266-4d7d-9e4f-\
06bc9d587712"],

Cell["\<\
#include \"LLU.h\"
EXTERN_C DLLEXPORT bool test_fc(bool in)
{
\treturn in;
}

EXTERN_C DLLEXPORT int test_llu(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto in = mngr.getBoolean(0);
\tmngr.set(in);
\treturn err;
}
EXTERN_C DLLEXPORT int __test__(WolframLibraryData libData, mint Argc, 
MArgument *Args, MArgument Res){
\tauto err = LLU::ErrorCode::NoError;
\tLLU::MArgumentManager mngr {libData, Argc, Args, Res};
\tauto a = mngr.getInteger(0);
\tmngr.set(!LLU::LibraryData::uncheckedAPI());
\treturn err;
}\
\>", "Program",
 CellChangeTimes->{{3.8690638320992856`*^9, 3.869063862737584*^9}, 
   3.8690642614517455`*^9},ExpressionUUID->"0d812b2e-1948-4043-b113-\
d1dc16d498af"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (2022\:5e746\:670816\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0e355c7f-cc09-40c5-a163-c6742ace7a1e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 3, 67, "Section",ExpressionUUID->"4f8de96f-2eb1-4990-aeec-e24e644f6f79"],
Cell[CellGroupData[{
Cell[762, 29, 170, 3, 54, "Subsection",ExpressionUUID->"d8ed2252-8368-4feb-bacb-38b19dac6056"],
Cell[CellGroupData[{
Cell[957, 36, 464, 15, 186, "ExternalLanguage",ExpressionUUID->"0fa9901b-9a15-4e3b-baed-6dac49848d87"],
Cell[CellGroupData[{
Cell[1446, 55, 267, 8, 24, "Echo",ExpressionUUID->"3af89828-5d2e-4b86-93a4-9b026f74cf7d"],
Cell[1716, 65, 217, 6, 24, "Echo",ExpressionUUID->"f53220a0-f8cc-4ad6-bc02-5cd6a3aa808f"],
Cell[1936, 73, 260, 8, 24, "Echo",ExpressionUUID->"53136ef5-29ad-4721-a5bc-defb23409a4d"]
}, Open  ]],
Cell[2211, 84, 59816, 1265, 329, "Output",ExpressionUUID->"4301e862-556b-41f5-bb28-d16203a8862b"],
Cell[CellGroupData[{
Cell[62052, 1353, 27864, 520, 102, "Echo",ExpressionUUID->"4f0dbe4d-fa2e-4fc8-b302-0fd6b1a7d581"],
Cell[89919, 1875, 213, 6, 24, "Echo",ExpressionUUID->"de91fe89-2fd9-4901-bd6a-49d2b24b546b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90193, 1888, 163, 3, 54, "Subsection",ExpressionUUID->"0279b9d8-8846-4afb-990c-49633ed380cb"],
Cell[90359, 1893, 27033, 447, 330, "Input",ExpressionUUID->"030c7552-eb33-4680-bc6b-245fc9920b0e"],
Cell[CellGroupData[{
Cell[117417, 2344, 1454, 34, 138, "Code",ExpressionUUID->"b8a75927-7461-4c57-b894-f3cea255df13"],
Cell[118874, 2380, 222, 3, 32, "Output",ExpressionUUID->"3688180b-b7c1-43e1-b417-930b8b91be4a"],
Cell[119099, 2385, 9416, 177, 66, "Output",ExpressionUUID->"6ec1dd36-588d-46a1-bb88-c7c0d5c761cb"],
Cell[128518, 2564, 224, 3, 32, "Output",ExpressionUUID->"b9dc50fb-32ab-4266-ae33-48f412153b19"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128791, 2573, 220, 4, 54, "Subsection",ExpressionUUID->"ed385fb5-3bdf-433d-a855-40fc9e767a75"],
Cell[129014, 2579, 849, 27, 423, "Program",ExpressionUUID->"40e28c99-7a05-4c91-8436-217798c389dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129912, 2612, 156, 3, 67, "Section",ExpressionUUID->"ccc43753-1f8a-47f6-bdb3-f8ccbd6178a2"],
Cell[CellGroupData[{
Cell[130093, 2619, 146, 3, 54, "Subsection",ExpressionUUID->"fa8afbf6-5328-4a03-b603-617ae9e06fc5"],
Cell[CellGroupData[{
Cell[130264, 2626, 403, 14, 186, "ExternalLanguage",ExpressionUUID->"c6e723f5-f672-4203-8e2e-71941c055183"],
Cell[CellGroupData[{
Cell[130692, 2644, 267, 8, 24, "Echo",ExpressionUUID->"4a94dafe-4783-4426-95e0-18a2d6f4d184"],
Cell[130962, 2654, 215, 6, 24, "Echo",ExpressionUUID->"8cd7de5e-99a9-44bb-899a-bb65033a2013"],
Cell[131180, 2662, 262, 8, 24, "Echo",ExpressionUUID->"20c4dfcd-abb2-4c72-b7af-8d435af6b740"]
}, Open  ]],
Cell[131457, 2673, 59454, 1261, 329, "Output",ExpressionUUID->"389cc8b5-5956-4e9c-8968-e398f8381392"],
Cell[CellGroupData[{
Cell[190936, 3938, 27846, 520, 102, "Echo",ExpressionUUID->"f2b9e84d-1675-41bb-b964-291995eb6134"],
Cell[218785, 4460, 213, 6, 24, "Echo",ExpressionUUID->"b4e90aec-be22-4d52-9894-2fa587e885bc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219059, 4473, 162, 3, 54, "Subsection",ExpressionUUID->"5f301f21-d665-479a-869c-06a7d3254067"],
Cell[219224, 4478, 27033, 447, 330, "Input",ExpressionUUID->"5daf4358-1202-4ebd-9d32-5bb5dd6ff34a"],
Cell[CellGroupData[{
Cell[246282, 4929, 1412, 34, 138, "Code",ExpressionUUID->"b67a15e7-771b-4c02-818b-aa1de6b34abd"],
Cell[247697, 4965, 203, 3, 32, "Output",ExpressionUUID->"a77c2ec2-ab76-4473-affb-9a77bfb889d2"],
Cell[247903, 4970, 9351, 177, 66, "Output",ExpressionUUID->"ddd866ac-404d-49b2-adae-bd007f738f6c"],
Cell[257257, 5149, 205, 3, 32, "Output",ExpressionUUID->"78f4bae3-9fc2-4d6e-88c4-845d4cf80cd9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257511, 5158, 220, 4, 54, "Subsection",ExpressionUUID->"5ac165bd-d6d3-4dab-949d-a238cdff54d9"],
Cell[257734, 5164, 871, 27, 423, "Program",ExpressionUUID->"c76660d9-781f-49b5-a6a7-0b9df5ce60ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[258654, 5197, 155, 3, 67, "Section",ExpressionUUID->"a6913028-cc56-4493-a4e1-17e08ec49af8"],
Cell[CellGroupData[{
Cell[258834, 5204, 172, 3, 54, "Subsection",ExpressionUUID->"edfe8374-21b2-4f40-820f-31c858cea7d3"],
Cell[CellGroupData[{
Cell[259031, 5211, 695, 15, 118, "ExternalLanguage",ExpressionUUID->"17aa0ce5-225b-486c-a5ad-746d4de93057"],
Cell[CellGroupData[{
Cell[259751, 5230, 267, 8, 24, "Echo",ExpressionUUID->"69072571-cd0c-4b8e-bfde-2ae6dd8eff20"],
Cell[260021, 5240, 217, 6, 24, "Echo",ExpressionUUID->"e4d0f228-660c-4a74-9e66-dd87963acbc5"],
Cell[260241, 5248, 262, 8, 24, "Echo",ExpressionUUID->"2ddc552d-b8a5-46cc-a13f-ca1dc70047cc"]
}, Open  ]],
Cell[260518, 5259, 59703, 1264, 329, "Output",ExpressionUUID->"ff35f81a-de3f-4d34-a9e7-8e6abc75816a"],
Cell[CellGroupData[{
Cell[320246, 6527, 27866, 520, 102, "Echo",ExpressionUUID->"5f89771d-cfe4-429d-ab09-50d5436a01d1"],
Cell[348115, 7049, 211, 6, 24, "Echo",ExpressionUUID->"0016b2ee-641f-4f4c-873f-c160ecaaefdc"],
Cell[348329, 7057, 270, 7, 24, "Echo",ExpressionUUID->"f01a9ee2-fe52-46c3-a6fe-f7c70516e484"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[348660, 7071, 163, 3, 54, "Subsection",ExpressionUUID->"dc635f25-9d8b-438d-80ec-5b3c61ca0d56"],
Cell[348826, 7076, 27033, 447, 330, "Input",ExpressionUUID->"34d81003-2e11-47fc-9606-726f3ab97a8b"],
Cell[CellGroupData[{
Cell[375884, 7527, 597, 15, 68, "Code",ExpressionUUID->"55041976-df99-48a0-837e-eb5c0cc1863f"],
Cell[376484, 7544, 306, 5, 32, "Output",ExpressionUUID->"14fc7b72-4070-4f39-af6a-2b99d78b5aca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[376839, 7555, 165, 3, 54, "Subsection",ExpressionUUID->"4aea9306-0d98-4084-bb9d-43315487fb42"],
Cell[377007, 7560, 796, 23, 355, "Program",ExpressionUUID->"e5c4a6d5-4092-4325-b672-a1d92f00dd89"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377852, 7589, 157, 3, 67, "Section",ExpressionUUID->"ee600c78-6ffe-467e-a748-e10e97097ce5"],
Cell[CellGroupData[{
Cell[378034, 7596, 172, 3, 54, "Subsection",ExpressionUUID->"4b67f516-0150-48db-8e5d-4fe728cd9002"],
Cell[CellGroupData[{
Cell[378231, 7603, 1776, 40, 407, "ExternalLanguage",ExpressionUUID->"e6bf3c3e-50c0-4ddc-93dc-a80e43e274d5"],
Cell[CellGroupData[{
Cell[380032, 7647, 267, 8, 24, "Echo",ExpressionUUID->"8d438a53-6bde-4d55-842d-e8ac879437e8"],
Cell[380302, 7657, 217, 6, 24, "Echo",ExpressionUUID->"a6a9b2f8-3c2b-471d-83c2-7b3747601bea"],
Cell[380522, 7665, 262, 8, 24, "Echo",ExpressionUUID->"24df49f8-d1d6-40ff-90d8-f2f724972e63"]
}, Open  ]],
Cell[380799, 7676, 63132, 1318, 329, "Output",ExpressionUUID->"950a4a53-e13f-40e3-9ab4-ade3d12acb91"],
Cell[CellGroupData[{
Cell[443956, 8998, 28240, 531, 102, "Echo",ExpressionUUID->"a1514fff-bc5b-4808-93c1-a81e225e2ff9"],
Cell[472199, 9531, 211, 6, 24, "Echo",ExpressionUUID->"1fe2ecf6-1311-4346-b983-1e778f4ea844"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[472471, 9544, 165, 3, 54, "Subsection",ExpressionUUID->"d3b230ec-d2a2-468d-bda8-f9e84daae647"],
Cell[472639, 9549, 27033, 447, 330, "Input",ExpressionUUID->"6d28438c-b23c-4747-bb3d-3b0086e0b92e"],
Cell[CellGroupData[{
Cell[499697, 10000, 2892, 70, 173, "Code",ExpressionUUID->"e9a414dc-1e78-42f2-a94a-1ff3fdad95da"],
Cell[502592, 10072, 608, 13, 32, "Output",ExpressionUUID->"ed7f23b1-ef0e-4372-86a9-3d8bdf13b342"],
Cell[503203, 10087, 1119, 24, 52, "Output",ExpressionUUID->"34227aa5-ac04-4bbb-8e21-37223f84db19"],
Cell[504325, 10113, 14262, 261, 66, "Output",ExpressionUUID->"1c8e4641-2494-4daf-bed6-73d5afdf4b40"],
Cell[518590, 10376, 608, 13, 32, "Output",ExpressionUUID->"40b2cf23-197e-4842-9f23-2802712b131f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[519247, 10395, 167, 3, 54, "Subsection",ExpressionUUID->"e64ef22c-97ff-44fe-b5fd-0aaccc4f0a27"],
Cell[519417, 10400, 1346, 40, 644, "Program",ExpressionUUID->"24eb74e4-1ee0-44e9-abcb-dabcd9adcfa8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[520812, 10446, 157, 3, 67, "Section",ExpressionUUID->"307ef09f-a722-49f8-9c07-bcf1a7f8df3c"],
Cell[CellGroupData[{
Cell[520994, 10453, 172, 3, 54, "Subsection",ExpressionUUID->"031a0aca-c2f5-4812-83d2-afd4055f4e59"],
Cell[CellGroupData[{
Cell[521191, 10460, 321, 13, 186, "ExternalLanguage",ExpressionUUID->"da4dc477-1662-43ac-a217-2a801f872b91"],
Cell[CellGroupData[{
Cell[521537, 10477, 267, 8, 24, "Echo",ExpressionUUID->"4ceca108-a1d9-461d-b9c3-d5f5ca61fe20"],
Cell[521807, 10487, 211, 5, 24, "Echo",ExpressionUUID->"b3e6ac9b-a21b-4082-9afe-83732d5d1da1"],
Cell[522021, 10494, 262, 8, 24, "Echo",ExpressionUUID->"05c83e1c-65ef-4a38-8c63-d4f6342f495a"]
}, Open  ]],
Cell[522298, 10505, 59264, 1255, 329, "Output",ExpressionUUID->"e2d7c736-6881-4288-a778-1fb8c97e5422"],
Cell[CellGroupData[{
Cell[581587, 11764, 27919, 521, 102, "Echo",ExpressionUUID->"b5715ef9-2b63-417a-bfa1-492d4d122a7d"],
Cell[609509, 12287, 208, 5, 24, "Echo",ExpressionUUID->"49de9731-9c13-469d-876b-bf74a5453187"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[609778, 12299, 163, 3, 54, "Subsection",ExpressionUUID->"efb74ea5-0cb5-49d8-86e9-21c02490596c"],
Cell[609944, 12304, 27033, 447, 330, "Input",ExpressionUUID->"c21e6f5f-08bf-492e-94b7-c54ac10a81c0"],
Cell[CellGroupData[{
Cell[637002, 12755, 935, 22, 103, "Code",ExpressionUUID->"dd19947a-8ff5-48a9-a099-6c69bb8e5dc1"],
Cell[637940, 12779, 154, 2, 32, "Output",ExpressionUUID->"0dbbd811-7f27-4db2-87c3-17efca1f1dca"],
Cell[638097, 12783, 9186, 175, 66, "Output",ExpressionUUID->"f68a71ec-a699-46f9-b826-3bb21528062f"],
Cell[647286, 12960, 154, 2, 32, "Output",ExpressionUUID->"7e55ba0c-36b2-4a0c-b9fe-e3461b5f52e8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[647489, 12968, 163, 3, 54, "Subsection",ExpressionUUID->"92efd4a8-a266-4d7d-9e4f-06bc9d587712"],
Cell[647655, 12973, 815, 26, 406, "Program",ExpressionUUID->"0d812b2e-1948-4043-b113-d1dc16d498af"]
}, Open  ]]
}, Open  ]]
}
]
*)

